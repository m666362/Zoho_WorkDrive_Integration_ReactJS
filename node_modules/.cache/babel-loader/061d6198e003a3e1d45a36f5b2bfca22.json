{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\Response.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport CommonComponent from \"./CommonComponent\";\nimport useTrackedStore from \"./../../store/useTrackedStore\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTableSearch } from \"./UseTableSearch\";\nimport CustomSeparator from \"./BreadCumb\";\nimport Box from \"@mui/material/Box\";\nimport ModalFileUpload from \"./ModalFileUpload\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\nimport SnackAlert from \"./SnackAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16\n};\n\nfunction Response(props) {\n  _s();\n\n  const {\n    rootFolderId,\n    userAccessToken,\n    name,\n    settingId\n  } = props;\n  const state = useTrackedStore();\n  const pageRenderCount = useRef(0);\n  const [post, setPost] = React.useState([]);\n  const [searchVal, setSearchVal] = React.useState(\"\");\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  let moveId = useRef(null);\n  useEffect(() => {\n    pageRenderCount.current = pageRenderCount.current + 1;\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const {\n    filteredData,\n    loading\n  } = useTableSearch({\n    searchVal,\n    retrieve: post !== null && post !== void 0 ? post : []\n  }); // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  // useEffect(() => {\n  //   setSearchVal(\"\");\n  //   ApiCall.getFoldersItem(state.token, \"84vmz6929609281b747e08cf692610413af1b\")\n  //     .then((res) => {\n  //       setPost(res.data);\n  //       state.setApiData(\"84vmz6929609281b747e08cf692610413af1b\", res.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, [state.token]);\n  // useEffect(() => {\n  //   setSearchVal(\"\");\n  //   ApiCall.getFoldersItem(state.token, \"pozgm6f2fd75302dc44b2ae733a74b8b77e87\")\n  //     .then((res) => {\n  //       setPost(res.data);\n  //       state.setApiData(\"pozgm6f2fd75302dc44b2ae733a74b8b77e87\", res.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, [state.token]);\n\n  useEffect(() => {\n    var _state$settingData, _state$settingData$se, _state$settingData$se2;\n\n    setSearchVal(\"\");\n\n    if (!((_state$settingData = state.settingData) !== null && _state$settingData !== void 0 && (_state$settingData$se = _state$settingData[settingId]) !== null && _state$settingData$se !== void 0 && (_state$settingData$se2 = _state$settingData$se.previousData) !== null && _state$settingData$se2 !== void 0 && _state$settingData$se2.hasOwnProperty(rootFolderId))) {\n      ApiCall.getFoldersItem(userAccessToken, rootFolderId).then(res => {\n        setPost(res.data);\n        state.setApiData(rootFolderId, res.data);\n        state.setApiSettingData(settingId, rootFolderId, res.data);\n        state.setLoading(false);\n      }).catch(error => {\n        console.log(error);\n        state.setLoading(false); // alert(error)\n      });\n    } else {\n      var _state$settingData2, _state$settingData2$s, _state$settingData2$s2, _state$settingData3, _state$settingData3$s, _state$settingData3$s2;\n\n      setPost((_state$settingData2 = state.settingData) === null || _state$settingData2 === void 0 ? void 0 : (_state$settingData2$s = _state$settingData2[settingId]) === null || _state$settingData2$s === void 0 ? void 0 : (_state$settingData2$s2 = _state$settingData2$s.previousData) === null || _state$settingData2$s2 === void 0 ? void 0 : _state$settingData2$s2[rootFolderId]);\n      state.setApiData(rootFolderId, (_state$settingData3 = state.settingData) === null || _state$settingData3 === void 0 ? void 0 : (_state$settingData3$s = _state$settingData3[settingId]) === null || _state$settingData3$s === void 0 ? void 0 : (_state$settingData3$s2 = _state$settingData3$s.previousData) === null || _state$settingData3$s2 === void 0 ? void 0 : _state$settingData3$s2[rootFolderId]);\n    } // if (rootFolderId && state?.token) {\n    //   ApiCall.getFoldersItem(state?.token, rootFolderId)\n    //     .then((res) => {\n    //       setPost(res.data);\n    //       state.setApiData(rootFolderId, res.data);\n    //       state.setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     });\n    // }\n\n  }, [userAccessToken, rootFolderId]);\n\n  function scriptLoaded() {\n    window.A.sort();\n  }\n\n  function handleCloseModal() {\n    setOpen(false);\n  }\n\n  function moveData(e, data) {\n    state.setId(data === null || data === void 0 ? void 0 : data.id);\n    moveId.current = data === null || data === void 0 ? void 0 : data.id; // moveId.type = \"move\";\n\n    console.log({\n      moveId\n    });\n  }\n\n  function pasteData(e, data) {\n    var _data$attributes;\n\n    if ((data === null || data === void 0 ? void 0 : (_data$attributes = data.attributes) === null || _data$attributes === void 0 ? void 0 : _data$attributes.type) === \"folder\" && (data === null || data === void 0 ? void 0 : data.id) !== moveId.current) {\n      ApiCall.moveFile(state === null || state === void 0 ? void 0 : state.token, data, moveId.current).then(res => {\n        let xArray = post.filter(file => file.id != moveId.current);\n        setSnackOpen(true);\n        console.log({\n          xArray\n        });\n        setPost(xArray);\n        state.setApiData(state.bread[state.bread.length - 1].id, xArray);\n        console.log(res);\n      }).catch(err => console.log(err));\n      console.log({\n        id: moveId.current\n      });\n    }\n  } // const moveData = (e, data) => {\n  //   console.log(data?.id);\n  //   state.setPasteChildId(data?.id)\n  // };\n  // const pasteData = (e, data) => {\n  //   console.log({id: state.pasteChildId});\n  //   // console.log(data?.id);\n  // };\n\n\n  async function handleClick(file) {\n    var _state$settingData4, _state$settingData4$s, _state$settingData4$s2;\n\n    if (!((_state$settingData4 = state.settingData) !== null && _state$settingData4 !== void 0 && (_state$settingData4$s = _state$settingData4[settingId]) !== null && _state$settingData4$s !== void 0 && (_state$settingData4$s2 = _state$settingData4$s.previousData) !== null && _state$settingData4$s2 !== void 0 && _state$settingData4$s2.hasOwnProperty(file === null || file === void 0 ? void 0 : file.id))) {\n      var _state$settingData5, _state$settingData5$s;\n\n      console.log({\n        notFound: \"id found handleClick\"\n      }); // Object.keys(state.apiData).map((i) => console.log(i));\n      // console.log(file.id, ' handleClick');\n      // console.log({notFound: 'id not found handleClick'});\n\n      ApiCall.getFoldersItem((_state$settingData5 = state.settingData) === null || _state$settingData5 === void 0 ? void 0 : (_state$settingData5$s = _state$settingData5[settingId]) === null || _state$settingData5$s === void 0 ? void 0 : _state$settingData5$s.userAccessToken, file === null || file === void 0 ? void 0 : file.id).then(res => {\n        state.setApiData(file.id, res.data);\n        state.setApiSettingData(settingId, file, res.data);\n        state.setBreadCrumbs(file);\n        setPost(res.data);\n        setSearchVal(\"\");\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      var _state$settingData6, _state$settingData6$s, _state$settingData6$s2;\n\n      // Object.keys(state.apiData).map((i) => console.log(i));\n      console.log({\n        idFound: \"id found handleClick\"\n      }); // state.setBreadCrumbs(file);\n      // setPost(state.apiData[file.id]);\n\n      setSearchVal(\"\");\n      setPost((_state$settingData6 = state.settingData) === null || _state$settingData6 === void 0 ? void 0 : (_state$settingData6$s = _state$settingData6[settingId]) === null || _state$settingData6$s === void 0 ? void 0 : (_state$settingData6$s2 = _state$settingData6$s.previousData) === null || _state$settingData6$s2 === void 0 ? void 0 : _state$settingData6$s2[rootFolderId]);\n      state.setBreadCrumbsSettingData(settingId, file); // state.setApiData(rootFolderId, state.settingData?.[settingId]?.previousData?.[rootFolderId]);\n    }\n  }\n\n  async function setBreadCrumbsUrl(file) {\n    var _state$settingData7, _state$settingData7$s, _state$settingData7$s2;\n\n    if (!((_state$settingData7 = state.settingData) !== null && _state$settingData7 !== void 0 && (_state$settingData7$s = _state$settingData7[settingId]) !== null && _state$settingData7$s !== void 0 && (_state$settingData7$s2 = _state$settingData7$s.previousData) !== null && _state$settingData7$s2 !== void 0 && _state$settingData7$s2.hasOwnProperty(file === null || file === void 0 ? void 0 : file.id))) {\n      console.log({\n        notFound: \"id not Found found setBreadCrumbsUrl\"\n      });\n\n      try {\n        const response = ApiCall.getFoldersItem(state === null || state === void 0 ? void 0 : state.token, file === null || file === void 0 ? void 0 : file.id);\n        state.setBreadCrumbsUrl(file);\n        state.setApiData(file.id, response.data);\n        setPost(response.data.data);\n        setSearchVal(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      Object.keys(state.apiData).map(i => console.log(i));\n      console.log({\n        idFound: \"id found setBreadCrumbsUrl\"\n      });\n      state.setBreadCrumbsUrl(file);\n      state.setBreadCrumbsSettingData(file);\n      setPost(state.apiData[file.id]);\n      setSearchVal(\"\");\n    }\n  }\n\n  const [files, setFiles] = React.useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    noClick: true,\n    noKeyboard: true,\n    // accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      console.log(\"File type detection\", acceptedFiles);\n      setOpen(true);\n      setFiles(acceptedFiles.map((file, index) => {\n        if (file.type.split(\"/\")[1] == \"pdf\") return Object.assign(file, {\n          preview: URL.createObjectURL(file),\n          special: true,\n          specialType: \"pdf\",\n          id: index\n        });else if (file.type.split(\"/\")[0] == \"image\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"image\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"zip\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"zip\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"msword\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"msword\",\n            id: index\n          });\n        } else {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"other\",\n            id: index\n          });\n        }\n      }));\n    }\n  });\n\n  const removeFile = deleteFile => {\n    console.log(deleteFile);\n    setFiles(files.filter(file => file.id != deleteFile.id));\n  };\n\n  const uploadFile = folderId => {\n    // Do something with the files\n    console.log(files);\n    var myCustomArray = post;\n    files.forEach(async (element, index) => {\n      console.log({\n        FolderId: state.bread[state.bread.length - 1].id\n      });\n      const data = new FormData();\n      data.append(\"file\", element); // console.warn(element);\n\n      console.log({\n        formData: data,\n        element\n      }); // console.log({fileUploading: myUrl});\n\n      try {\n        const response = await ApiCall.fileUploader(state === null || state === void 0 ? void 0 : state.token, data, state.bread.slice(-1)[0].id); // console.log({ testPurpose: response });\n        // console.log({\n        //   dataTesting: response.data.data[0].attributes.resource_id,\n        // });\n\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\n        myCustomArray.unshift(myCustomFile);\n        console.log({\n          myCustomArray: myCustomArray\n        });\n        state.setApiData(state.bread[state.bread.length - 1].id, myCustomArray);\n        setPost(myCustomArray);\n        setSnackOpen(true);\n        console.log({\n          post: post\n        });\n      } catch (error) {\n        console.log({\n          error: error\n        });\n      }\n    });\n    setFiles([]);\n  };\n\n  const thumbs = files.length ? /*#__PURE__*/_jsxDEV(ModalFileUpload, {\n    files: files,\n    removeFile: removeFile,\n    open: open,\n    setOpen: setOpen,\n    handleCloseModal: handleCloseModal,\n    uploadFile: uploadFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...getRootProps({\n      className: \"dropzone disabled\"\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: state.bread.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(state.apiData).map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: state.bread[state.bread.length - 1].id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(CustomSeparator, {\n        settingId: settingId,\n        setBreadCrumbsUrl: setBreadCrumbsUrl,\n        searchVal: searchVal,\n        setSearchVal: setSearchVal,\n        handleClickOpen: handleClickOpen,\n        setPost: setPost,\n        post: post,\n        setSnackOpen: setSnackOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), filteredData.length === 0 && !state.loading && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      fullheight: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fullwidth: true,\n        variant: \"h1\",\n        component: \"div\",\n        children: \"Nothing here!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), filteredData.length !== 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      sx: {\n        padding: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        spacing: 2,\n        children: [filteredData.filter(file => file.attributes.type === \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 3\n          } // columns={{ xs: 4, sm: 8, md: 12 }}\n          ,\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type == \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [filteredData.filter(file => file.attributes.type !== \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this), state.listView ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: true ? {\n            xs: 2,\n            md: 4\n          } : {},\n          rowSpacing: false ? 0 : 1,\n          columnSpacing: false ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: state.listView ? {\n            xs: 2,\n            md: 3\n          } : {},\n          columns: state.listView ? {\n            xs: 4,\n            sm: 8,\n            md: 12\n          } : {},\n          rowSpacing: state.listView ? 0 : 1,\n          columnSpacing: state.listView ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SnackAlert, {\n      snackOpen: snackOpen,\n      handleCloseSnack: handleCloseSnack,\n      severity: \"success\",\n      message: \"This is a success message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Response, \"UK+X0eKyTHJyrgu+C5VwySyAa7M=\", false, function () {\n  return [useTrackedStore, useTableSearch, useDropzone];\n});\n\n_c = Response;\nexport default Response;\n\nvar _c;\n\n$RefreshReg$(_c, \"Response\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/Response.js"],"names":["React","useEffect","useState","useCallback","useRef","useDropzone","CommonComponent","useTrackedStore","Typography","Grid","useTableSearch","CustomSeparator","Box","ModalFileUpload","ApiCall","FileUploadResponse","SnackAlert","thumbsContainer","display","flexDirection","flexWrap","marginTop","Response","props","rootFolderId","userAccessToken","name","settingId","state","pageRenderCount","post","setPost","searchVal","setSearchVal","snackOpen","setSnackOpen","open","setOpen","moveId","current","handleClickOpen","filteredData","loading","retrieve","settingData","previousData","hasOwnProperty","getFoldersItem","then","res","data","setApiData","setApiSettingData","setLoading","catch","error","console","log","scriptLoaded","window","A","sort","handleCloseModal","moveData","e","setId","id","pasteData","attributes","type","moveFile","token","xArray","filter","file","bread","length","err","handleClick","notFound","setBreadCrumbs","idFound","setBreadCrumbsSettingData","setBreadCrumbsUrl","response","Object","keys","apiData","map","i","files","setFiles","getRootProps","getInputProps","noClick","noKeyboard","onDrop","acceptedFiles","index","split","assign","preview","URL","createObjectURL","special","specialType","removeFile","deleteFile","uploadFile","folderId","myCustomArray","forEach","element","FolderId","FormData","append","formData","fileUploader","slice","myCustomFile","makeCustomFile","unshift","thumbs","revokeObjectURL","handleCloseSnack","event","reason","className","JSON","stringify","xs","md","padding","textAlign","listView","sm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport CommonComponent from \"./CommonComponent\";\r\nimport useTrackedStore from \"./../../store/useTrackedStore\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useTableSearch } from \"./UseTableSearch\";\r\nimport CustomSeparator from \"./BreadCumb\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport ModalFileUpload from \"./ModalFileUpload\";\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\r\nimport SnackAlert from \"./SnackAlert\";\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nfunction Response(props) {\r\n  const { rootFolderId, userAccessToken, name, settingId } = props;\r\n  const state = useTrackedStore();\r\n  const pageRenderCount = useRef(0);\r\n  const [post, setPost] = React.useState([]);\r\n  const [searchVal, setSearchVal] = React.useState(\"\");\r\n  const [snackOpen, setSnackOpen] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  let moveId = useRef(null);\r\n\r\n  useEffect(() => {\r\n    pageRenderCount.current = pageRenderCount.current + 1;\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const { filteredData, loading } = useTableSearch({\r\n    searchVal,\r\n    retrieve: post ?? [],\r\n  });\r\n\r\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  // useEffect(() => {\r\n  //   setSearchVal(\"\");\r\n\r\n  //   ApiCall.getFoldersItem(state.token, \"84vmz6929609281b747e08cf692610413af1b\")\r\n  //     .then((res) => {\r\n  //       setPost(res.data);\r\n  //       state.setApiData(\"84vmz6929609281b747e08cf692610413af1b\", res.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }, [state.token]);\r\n\r\n  // useEffect(() => {\r\n  //   setSearchVal(\"\");\r\n\r\n  //   ApiCall.getFoldersItem(state.token, \"pozgm6f2fd75302dc44b2ae733a74b8b77e87\")\r\n  //     .then((res) => {\r\n  //       setPost(res.data);\r\n  //       state.setApiData(\"pozgm6f2fd75302dc44b2ae733a74b8b77e87\", res.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }, [state.token]);\r\n\r\n  useEffect(() => {\r\n    setSearchVal(\"\");\r\n    if (!state.settingData?.[settingId]?.previousData?.hasOwnProperty(rootFolderId)) {\r\n      ApiCall.getFoldersItem(userAccessToken, rootFolderId)\r\n        .then((res) => {\r\n          setPost(res.data);\r\n          state.setApiData(rootFolderId, res.data);\r\n          state.setApiSettingData(settingId, rootFolderId, res.data);\r\n          state.setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          state.setLoading(false);\r\n          // alert(error)\r\n        });\r\n    }else{\r\n      setPost(state.settingData?.[settingId]?.previousData?.[rootFolderId]);\r\n      state.setApiData(rootFolderId, state.settingData?.[settingId]?.previousData?.[rootFolderId]);\r\n    }\r\n\r\n    // if (rootFolderId && state?.token) {\r\n\r\n    //   ApiCall.getFoldersItem(state?.token, rootFolderId)\r\n    //     .then((res) => {\r\n    //       setPost(res.data);\r\n    //       state.setApiData(rootFolderId, res.data);\r\n\r\n    //       state.setLoading(false);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n    // }\r\n  }, [userAccessToken, rootFolderId]);\r\n\r\n  function scriptLoaded() {\r\n    window.A.sort();\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function moveData(e, data) {\r\n    state.setId(data?.id);\r\n    moveId.current = data?.id;\r\n    // moveId.type = \"move\";\r\n    console.log({ moveId });\r\n  }\r\n\r\n  function pasteData(e, data) {\r\n    if (data?.attributes?.type === \"folder\" && data?.id !== moveId.current) {\r\n      ApiCall.moveFile(state?.token, data, moveId.current)\r\n        .then((res) => {\r\n          let xArray = post.filter((file) => file.id != moveId.current);\r\n          setSnackOpen(true);\r\n          console.log({ xArray });\r\n          setPost(xArray);\r\n          state.setApiData(state.bread[state.bread.length - 1].id, xArray);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log({ id: moveId.current });\r\n    }\r\n  }\r\n\r\n  // const moveData = (e, data) => {\r\n  //   console.log(data?.id);\r\n  //   state.setPasteChildId(data?.id)\r\n  // };\r\n\r\n  // const pasteData = (e, data) => {\r\n  //   console.log({id: state.pasteChildId});\r\n  //   // console.log(data?.id);\r\n  // };\r\n\r\n  async function handleClick(file) {\r\n    if (!state.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id) ) {\r\n      console.log({ notFound: \"id found handleClick\" });\r\n      // Object.keys(state.apiData).map((i) => console.log(i));\r\n      // console.log(file.id, ' handleClick');\r\n      // console.log({notFound: 'id not found handleClick'});\r\n      ApiCall.getFoldersItem(state.settingData?.[settingId]?.userAccessToken, file?.id)\r\n        .then((res) => {\r\n          state.setApiData(file.id, res.data);\r\n\r\n          state.setApiSettingData(settingId, file, res.data);\r\n          state.setBreadCrumbs(file);\r\n          setPost(res.data);\r\n          setSearchVal(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      // Object.keys(state.apiData).map((i) => console.log(i));\r\n      console.log({ idFound: \"id found handleClick\" });\r\n      // state.setBreadCrumbs(file);\r\n      // setPost(state.apiData[file.id]);\r\n      setSearchVal(\"\");\r\n      setPost(state.settingData?.[settingId]?.previousData?.[rootFolderId]);\r\n      state.setBreadCrumbsSettingData(settingId, file)\r\n      // state.setApiData(rootFolderId, state.settingData?.[settingId]?.previousData?.[rootFolderId]);\r\n    }\r\n  }\r\n\r\n  async function setBreadCrumbsUrl(file) {\r\n    if ( !state.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id) ) {\r\n      console.log({ notFound: \"id not Found found setBreadCrumbsUrl\" });\r\n      try {\r\n        const response = ApiCall.getFoldersItem(state?.token, file?.id);\r\n        state.setBreadCrumbsUrl(file);\r\n        state.setApiData(file.id, response.data);\r\n        setPost(response.data.data);\r\n        setSearchVal(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      Object.keys(state.apiData).map((i) => console.log(i));\r\n      console.log({ idFound: \"id found setBreadCrumbsUrl\" });\r\n      state.setBreadCrumbsUrl(file);\r\n      state.setBreadCrumbsSettingData(file);\r\n      setPost(state.apiData[file.id]);\r\n      setSearchVal(\"\");\r\n    }\r\n  }\r\n\r\n  const [files, setFiles] = React.useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    // accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      console.log(\"File type detection\", acceptedFiles);\r\n      setOpen(true);\r\n      setFiles(\r\n        acceptedFiles.map((file, index) => {\r\n          if (file.type.split(\"/\")[1] == \"pdf\")\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: true,\r\n              specialType: \"pdf\",\r\n              id: index,\r\n            });\r\n          else if (file.type.split(\"/\")[0] == \"image\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"image\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"zip\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"zip\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"msword\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"msword\",\r\n              id: index,\r\n            });\r\n          } else {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"other\",\r\n              id: index,\r\n            });\r\n          }\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  const removeFile = (deleteFile) => {\r\n    console.log(deleteFile);\r\n    setFiles(files.filter((file) => file.id != deleteFile.id));\r\n  };\r\n\r\n  const uploadFile = (folderId) => {\r\n    // Do something with the files\r\n    console.log(files);\r\n\r\n    var myCustomArray = post;\r\n    files.forEach(async (element, index) => {\r\n      console.log({ FolderId: state.bread[state.bread.length - 1].id });\r\n      const data = new FormData();\r\n      data.append(\"file\", element);\r\n      // console.warn(element);\r\n      console.log({\r\n        formData: data,\r\n        element,\r\n      });\r\n      // console.log({fileUploading: myUrl});\r\n      try {\r\n        const response = await ApiCall.fileUploader(\r\n          state?.token,\r\n          data,\r\n          state.bread.slice(-1)[0].id\r\n        );\r\n        // console.log({ testPurpose: response });\r\n        // console.log({\r\n        //   dataTesting: response.data.data[0].attributes.resource_id,\r\n        // });\r\n\r\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\r\n        myCustomArray.unshift(myCustomFile);\r\n        console.log({ myCustomArray: myCustomArray });\r\n        state.setApiData(state.bread[state.bread.length - 1].id, myCustomArray);\r\n        setPost(myCustomArray);\r\n        setSnackOpen(true);\r\n        console.log({ post: post });\r\n      } catch (error) {\r\n        console.log({ error: error });\r\n      }\r\n    });\r\n    setFiles([]);\r\n  };\r\n\r\n  const thumbs = files.length ? (\r\n    <ModalFileUpload\r\n      files={files}\r\n      removeFile={removeFile}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleCloseModal={handleCloseModal}\r\n      uploadFile={uploadFile}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      {...getRootProps({ className: \"dropzone disabled\" })}\r\n    >\r\n      {/* <div>{JSON.stringify(post??[])}</div> */}\r\n      {/* <div>\r\n        <div>{\r\n          state.bread.map(i => <div>{JSON.stringify(i)}</div>)\r\n        }</div>\r\n        <br />\r\n        <div>{\r\n          Object.keys(state.apiData).map(i => <div>{JSON.stringify(i)}</div>)\r\n        }</div>\r\n        <br />\r\n        <div>{\r\n          state.bread[state.bread.length - 1].id\r\n        }</div></div> */}\r\n\r\n      <Box sx={{ display: \"none\" }}>\r\n        <div>\r\n          {state.bread.map((i) => (\r\n            <div>{JSON.stringify(i)}</div>\r\n          ))}\r\n        </div>\r\n        <br />\r\n        <div>\r\n          {Object.keys(state.apiData).map((i) => (\r\n            <div>{JSON.stringify(i)}</div>\r\n          ))}\r\n        </div>\r\n        <br />\r\n        <div>{state.bread[state.bread.length - 1].id}</div>\r\n      </Box>\r\n      <Grid item container>\r\n        <CustomSeparator\r\n          settingId={settingId}\r\n          setBreadCrumbsUrl={setBreadCrumbsUrl}\r\n          searchVal={searchVal}\r\n          setSearchVal={setSearchVal}\r\n          handleClickOpen={handleClickOpen}\r\n          setPost={setPost}\r\n          post={post}\r\n          setSnackOpen={setSnackOpen}\r\n        />\r\n      </Grid>\r\n      <input {...getInputProps()} />\r\n      <div style={thumbsContainer}>{thumbs}</div>\r\n\r\n      {filteredData.length === 0 && !state.loading && (\r\n        <Grid item fullheight justifyContent=\"center\">\r\n          <Typography fullwidth variant=\"h1\" component=\"div\">\r\n            Nothing here!!!\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {/* <div>{JSON.stringify(post??[])}</div> */}\r\n      {filteredData.length !== 0 && (\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          spacing={{ xs: 2, md: 3 }}\r\n          sx={{ padding: 5 }}\r\n        >\r\n          <Grid item xs={12} spacing={2}>\r\n            {filteredData.filter((file) => file.attributes.type === \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Folder\r\n              </Typography>\r\n            )}\r\n\r\n            <Grid\r\n              container\r\n              spacing={{ xs: 2, md: 3 }}\r\n              // columns={{ xs: 4, sm: 8, md: 12 }}\r\n            >\r\n              {filteredData?.map((file, index) => {\r\n                if (file.attributes.type == \"folder\")\r\n                  return (\r\n                    <Grid item xs={12} sm={4} md={3}>\r\n                      <CommonComponent\r\n                        file={file}\r\n                        handleClick={() => handleClick(file)}\r\n                        setPost={setPost}\r\n                        post={post}\r\n                        setSnackOpen={setSnackOpen}\r\n                        moveData={moveData}\r\n                        pasteData={pasteData}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {filteredData.filter((file) => file.attributes.type !== \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Files\r\n              </Typography>\r\n            )}\r\n\r\n            {state.listView ? (\r\n              <Grid\r\n                container\r\n                spacing={true ? { xs: 2, md: 4 } : {}}\r\n                rowSpacing={false ? 0 : 1}\r\n                columnSpacing={false ? {} : { xs: 1, sm: 2, md: 3 }}\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} sm={6} md={4}>\r\n                        <CommonComponent\r\n                          file={file}\r\n                          handleClick={() => handleClick(file)}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveData={moveData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            ) : (\r\n              <Grid\r\n                container\r\n                spacing={state.listView ? { xs: 2, md: 3 } : {}}\r\n                columns={state.listView ? { xs: 4, sm: 8, md: 12 } : {}}\r\n                rowSpacing={state.listView ? 0 : 1}\r\n                columnSpacing={state.listView ? {} : { xs: 1, sm: 2, md: 3 }}\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} md={3}>\r\n                        <CommonComponent\r\n                          file={file}\r\n                          handleClick={() => handleClick(file)}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveData={moveData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <SnackAlert\r\n        snackOpen={snackOpen}\r\n        handleCloseSnack={handleCloseSnack}\r\n        severity={\"success\"}\r\n        message={\"This is a success message!\"}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Response;\r\n"]},"metadata":{},"sourceType":"module"}