{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\ImageCard.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowLefttIcon from \"@material-ui/icons/ArrowLeft\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { Document, Page } from \"react-pdf\";\nimport \"./Response\";\nimport { useReactToPrint } from \"react-to-print\";\nimport PdfViewer from \"./PdfViewer\";\nimport { typography } from \"@material-ui/system\";\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport \"./project_folder.css\";\nimport ModalPdf from \"./ModalPdf\";\nimport useTrackedStore from \"../../store/useTrackedStore\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst CustomImage = styled(\"img\")(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    minHeight: \"210px\",\n    minWidth: \"100%\" // [theme.breakpoints.down(\"md\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    // },\n    // [theme.breakpoints.up(\"md\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    // },\n    // [theme.breakpoints.up(\"xl\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    // },\n\n  };\n});\nconst useStyles = makeStyles({\n  fileroot: {\n    border: \"2px solid #E0E0E0\",\n    // padding: 10,\n    minWidth: 200,\n    minHeight: 170,\n    borderRadius: \"5px\",\n    \"&:hover\": {\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\n      transitionDuration: \"0.3s\"\n    },\n    \"&:focus\": {\n      border: \"2px solid #28B294\"\n    }\n  },\n  item: {\n    textAlign: \"left !important\"\n  },\n  details: {\n    padding: \"0 10px\"\n  },\n  image: {\n    width: \"200px\",\n    height: \"170px\"\n  }\n});\nconst BoxThumb = styled(\"Box\")(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    minHeight: \"100%\",\n    minWidth: \"100%\" // [theme.breakpoints.down(\"md\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n    // [theme.breakpoints.up(\"md\")]: {\n    //   width: \"300px\",\n    //   height: \"170px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n    // [theme.breakpoints.up(\"xl\")]: {\n    //   width: \"433px\",\n    //   height: \"300px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n\n  };\n});\nexport default function ActionAreaCard(_ref3) {\n  _s();\n\n  let {\n    file\n  } = _ref3;\n  const [open, setOpen] = React.useState(false);\n  const state = useTrackedStore();\n  const classes = useStyles();\n  const [numPages, setNumPages] = React.useState(null);\n  const [pageNumber, setPageNumber] = React.useState(1);\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\n\n  function onDocumentLoadSuccess(_ref4) {\n    let {\n      numPages\n    } = _ref4;\n    setNumPages(numPages);\n  }\n\n  const [profileImage, setProfileImage] = React.useState();\n  const componentRef = React.useRef();\n  React.useEffect(async () => {\n    let resData = await ApiCall.getThumbnailData(state === null || state === void 0 ? void 0 : state.token, file);\n    var blodData = new Blob([resData.data]);\n    var urlData = URL.createObjectURL(blodData);\n    setThumbnailUrl(urlData);\n  }, [file === null || file === void 0 ? void 0 : file.attributes.thumbnail_url]);\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  const getUserImage = async file => {\n    let res = await ApiCall.getImageResponse(state === null || state === void 0 ? void 0 : state.token, file);\n    console.log({\n      reDDds: res\n    });\n    var blobFile = new Blob([res.data], {\n      type: \"application/pdf\"\n    });\n    var fileURL = URL.createObjectURL(blobFile);\n    console.log(\"fileURL\", fileURL);\n    state.setLoading(false);\n    setOpen(true);\n    setProfileImage(fileURL); // window.open(fileURL);\n  };\n\n  React.useEffect(() => {\n    setThumbnailUrl();\n  }, []);\n\n  const handleClickOpen = file => {\n    state.setLoading(true);\n    getUserImage(file);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      tabIndex: \"1\",\n      className: classes.fileroot,\n      onClick: () => handleClickOpen(file),\n      children: [thumbnailImage ? /*#__PURE__*/_jsxDEV(CustomImage, {\n        src: thumbnailImage // lt={file?.attributes.name}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BoxThumb, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: file === null || file === void 0 ? void 0 : file.attributes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: file === null || file === void 0 ? void 0 : file.attributes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalPdf, {\n      profileImage: profileImage,\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActionAreaCard, \"Nyd94SjHr8UWbDu1ZhVRr52nbQs=\", false, function () {\n  return [useTrackedStore, useStyles, useReactToPrint];\n});\n\n_c3 = ActionAreaCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"ActionAreaCard\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/ImageCard.js"],"names":["React","Card","CardActionArea","CardContent","CardMedia","Grid","Typography","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","ArrowRightIcon","ArrowLefttIcon","CloseIcon","Slide","Document","Page","useReactToPrint","PdfViewer","typography","experimentalStyled","styled","makeStyles","ApiCall","FileUploadResponse","ArchiveIcon","ModalPdf","useTrackedStore","CircularProgress","Transition","forwardRef","props","ref","CustomImage","theme","minHeight","minWidth","useStyles","fileroot","border","borderRadius","boxShadow","transitionDuration","item","textAlign","details","padding","image","width","height","BoxThumb","ActionAreaCard","file","open","setOpen","useState","state","classes","numPages","setNumPages","pageNumber","setPageNumber","thumbnailImage","setThumbnailUrl","onDocumentLoadSuccess","profileImage","setProfileImage","componentRef","useRef","useEffect","resData","getThumbnailData","token","blodData","Blob","data","urlData","URL","createObjectURL","attributes","thumbnail_url","handlePrint","content","current","getUserImage","res","getImageResponse","console","log","reDDds","blobFile","type","fileURL","setLoading","handleClickOpen","handleClose","name"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport ArrowLefttIcon from \"@material-ui/icons/ArrowLeft\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Document, Page } from \"react-pdf\";\r\nimport {} from \"./Response\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport PdfViewer from \"./PdfViewer\";\r\nimport { typography } from \"@material-ui/system\";\r\n\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport \"./project_folder.css\";\r\nimport ModalPdf from \"./ModalPdf\";\r\nimport useTrackedStore from \"../../store/useTrackedStore\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CustomImage = styled(\"img\")(({ theme }) => ({\r\n  \r\n  minHeight: \"210px\",\r\n  minWidth: \"100%\",\r\n\r\n  // [theme.breakpoints.down(\"md\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  // },\r\n  // [theme.breakpoints.up(\"md\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  // },\r\n  // [theme.breakpoints.up(\"xl\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  // },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  fileroot: {\r\n    border: \"2px solid #E0E0E0\",\r\n    // padding: 10,\r\n    minWidth: 200,\r\n    minHeight: 170,\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\r\n      transitionDuration: \"0.3s\",\r\n    },\r\n    \"&:focus\": {\r\n      border: \"2px solid #28B294\",\r\n    },\r\n  },\r\n  item: {\r\n    textAlign: \"left !important\",\r\n  },\r\n  details: {\r\n    padding: \"0 10px\",\r\n  },\r\n  image: {\r\n    width: \"200px\",\r\n    height: \"170px\",\r\n  },\r\n});\r\n\r\nconst BoxThumb = styled(\"Box\")(({ theme }) => ({\r\n  \r\n  minHeight: \"100%\",\r\n  minWidth: \"100%\",\r\n\r\n  // [theme.breakpoints.down(\"md\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // [theme.breakpoints.up(\"md\")]: {\r\n  //   width: \"300px\",\r\n  //   height: \"170px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // [theme.breakpoints.up(\"xl\")]: {\r\n  //   width: \"433px\",\r\n  //   height: \"300px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n}));\r\n\r\nexport default function ActionAreaCard({ file }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const state = useTrackedStore();\r\n  const classes = useStyles();\r\n  const [numPages, setNumPages] = React.useState(null);\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  const [profileImage, setProfileImage] = React.useState();\r\n  const componentRef = React.useRef();\r\n\r\n  React.useEffect(async () => {\r\n    let resData = await ApiCall.getThumbnailData(state?.token, file);\r\n    var blodData = new Blob([resData.data]);\r\n    var urlData = URL.createObjectURL(blodData);\r\n    setThumbnailUrl(urlData);\r\n  }, [file?.attributes.thumbnail_url]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  const getUserImage = async (file) => {\r\n    let res = await ApiCall.getImageResponse(state?.token, file);\r\n    console.log({ reDDds: res });\r\n    var blobFile = new Blob([res.data], { type: \"application/pdf\" });\r\n    var fileURL = URL.createObjectURL(blobFile);\r\n    console.log(\"fileURL\", fileURL);\r\n    state.setLoading(false);\r\n    setOpen(true);\r\n    setProfileImage(fileURL);\r\n    // window.open(fileURL);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setThumbnailUrl();\r\n  }, []);\r\n\r\n  const handleClickOpen = (file) => {\r\n    state.setLoading(true);\r\n    getUserImage(file);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid\r\n        tabIndex=\"1\"\r\n        className={classes.fileroot}\r\n        onClick={() => handleClickOpen(file)}\r\n      >\r\n        {thumbnailImage ? (\r\n          <CustomImage src={thumbnailImage} \r\n          // lt={file?.attributes.name}\r\n           />\r\n        ) : (\r\n          <BoxThumb>\r\n            <CircularProgress />\r\n          </BoxThumb>\r\n        )}\r\n        <br />\r\n        <Grid className={classes.details}>\r\n          <Typography variant=\"h6\">{file?.attributes.name}</Typography>\r\n          <Typography variant=\"body1\">{file?.attributes.name}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ModalPdf profileImage={profileImage} open={open} setOpen={setOpen} />\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}