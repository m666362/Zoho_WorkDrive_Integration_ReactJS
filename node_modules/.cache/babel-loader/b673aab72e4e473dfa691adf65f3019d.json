{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\Response.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport CommonComponent from \"./CommonComponent\";\nimport useTrackedStore from \"./../../store/useTrackedStore\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTableSearch } from \"./UseTableSearch\";\nimport CustomSeparator from \"./BreadCumb\";\nimport Box from \"@mui/material/Box\";\nimport ModalFileUpload from \"./ModalFileUpload\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\nimport SnackAlert from \"./SnackAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16\n};\n\nfunction Response(props) {\n  _s();\n\n  var _state$settingData11, _state$settingData11$, _state$settingData12, _state$settingData12$, _state$settingData13, _state$settingData13$, _state$settingData14, _state$settingData14$, _state$settingData15, _state$settingData15$;\n\n  // const { rootFolderId, userAccessToken, name, settingId} = props;\n  const {\n    rootFolderId,\n    userAccessToken,\n    name,\n    settingId,\n    post,\n    setPost,\n    searchVal,\n    setSearchVal,\n    handleClick\n  } = props;\n  const state = useTrackedStore(); // const [post, setPost] = React.useState([]);\n  // const [searchVal, setSearchVal] = React.useState(\"\");\n\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  let moveCopyItem = useRef(null);\n  let checker = useRef(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const {\n    filteredData,\n    loading\n  } = useTableSearch({\n    searchVal,\n    retrieve: post !== null && post !== void 0 ? post : []\n  }); // useEffect(async () => {\n  //   setSearchVal(\"\");\n  //   if (\n  //     !state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\n  //       rootFolderId\n  //     )\n  //   ) {\n  //     let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\n  //     try {\n  //       setPost(res.data);\n  //       state?.setApiSettingData(settingId, rootFolderId, res.data);\n  //       state?.setLoading(false);\n  //     } catch (error) {\n  //       console.log({ error });\n  //     }\n  //   } else {\n  //     let lastIndex = state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\n  //     let lastIndexId =\n  //       state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\n  //     console.log({\n  //       lastData: state?.settingData?.[settingId]?.previousData?.[lastIndexId],\n  //     });\n  //     setPost(state?.settingData?.[settingId]?.previousData?.[lastIndexId]);\n  //   }\n  // }, [userAccessToken, rootFolderId, settingId]);\n\n  function scriptLoaded() {\n    window.A.sort();\n  }\n\n  function handleCloseModal() {\n    setOpen(false);\n  }\n\n  function moveCopyData(e, data) {\n    moveCopyItem.current = data; // moveCopyItem.type = \"move\";\n\n    console.log({\n      moveCopyItem\n    });\n  }\n\n  async function pasteData(e, data) {\n    var _moveCopyItem$current, _moveCopyItem$current2, _moveCopyItem$current3, _data$pasteFile, _data$pasteFile$attri;\n\n    if (moveCopyItem !== null && moveCopyItem !== void 0 && (_moveCopyItem$current = moveCopyItem.current) !== null && _moveCopyItem$current !== void 0 && _moveCopyItem$current.type && (moveCopyItem === null || moveCopyItem === void 0 ? void 0 : (_moveCopyItem$current2 = moveCopyItem.current) === null || _moveCopyItem$current2 === void 0 ? void 0 : (_moveCopyItem$current3 = _moveCopyItem$current2.file) === null || _moveCopyItem$current3 === void 0 ? void 0 : _moveCopyItem$current3.id) !== (data === null || data === void 0 ? void 0 : data.id) && (data === null || data === void 0 ? void 0 : (_data$pasteFile = data.pasteFile) === null || _data$pasteFile === void 0 ? void 0 : (_data$pasteFile$attri = _data$pasteFile.attributes) === null || _data$pasteFile$attri === void 0 ? void 0 : _data$pasteFile$attri.type) === \"folder\") {\n      var _data$pasteFile2, _moveCopyItem$current4, _moveCopyItem$current5;\n\n      console.log(\"Paste True\");\n      console.log(data === null || data === void 0 ? void 0 : (_data$pasteFile2 = data.pasteFile) === null || _data$pasteFile2 === void 0 ? void 0 : _data$pasteFile2.id); // pastePost\n\n      if ((moveCopyItem === null || moveCopyItem === void 0 ? void 0 : (_moveCopyItem$current4 = moveCopyItem.current) === null || _moveCopyItem$current4 === void 0 ? void 0 : _moveCopyItem$current4.type) === \"copy\") {\n        var _state$settingData, _state$settingData$se, _state$settingData$se2, _data$pasteFile3;\n\n        if ((_state$settingData = state.settingData) !== null && _state$settingData !== void 0 && (_state$settingData$se = _state$settingData[settingId]) !== null && _state$settingData$se !== void 0 && (_state$settingData$se2 = _state$settingData$se.previousData) !== null && _state$settingData$se2 !== void 0 && _state$settingData$se2[data === null || data === void 0 ? void 0 : (_data$pasteFile3 = data.pasteFile) === null || _data$pasteFile3 === void 0 ? void 0 : _data$pasteFile3.id]) {\n          console.log(\"Copy Folder exist in state\");\n        } else {\n          console.log(\"Copy Folder doesn't exist\");\n        }\n      } else if ((moveCopyItem === null || moveCopyItem === void 0 ? void 0 : (_moveCopyItem$current5 = moveCopyItem.current) === null || _moveCopyItem$current5 === void 0 ? void 0 : _moveCopyItem$current5.type) === \"move\") {\n        var _state$settingData2, _state$settingData2$s, _state$settingData2$s2, _data$pasteFile4;\n\n        // const res = await ApiCall.moveFile(userAccessToken, data?.pasteFile, moveCopyItem?.current?.file?.id);\n        // let xArray = data?.pastePost?.filter((file) => file.id != moveCopyItem?.current?.file?.id);\n        // setSnackOpen(true);\n        if ((_state$settingData2 = state.settingData) !== null && _state$settingData2 !== void 0 && (_state$settingData2$s = _state$settingData2[settingId]) !== null && _state$settingData2$s !== void 0 && (_state$settingData2$s2 = _state$settingData2$s.previousData) !== null && _state$settingData2$s2 !== void 0 && _state$settingData2$s2[data === null || data === void 0 ? void 0 : (_data$pasteFile4 = data.pasteFile) === null || _data$pasteFile4 === void 0 ? void 0 : _data$pasteFile4.id]) {\n          console.log(\"Move Folder exist in state\");\n        } else {\n          console.log(\"Move Folder doesn't exist\");\n        }\n      } // if (data?.id === lastIndexId) {\n      //   console.log(\"Same dir\");\n      // } else {\n      //   console.log(\"Different Dir\");\n      // }\n\n    } else {\n      console.log(\"Paste false\");\n    }\n\n    if (false) {\n      ApiCall.moveFile(state === null || state === void 0 ? void 0 : state.token, data, moveCopyItem.current).then(res => {\n        var _state$settingData3, _state$settingData3$s, _state$settingData3$s2, _state$settingData4, _state$settingData4$s, _state$settingData4$s2;\n\n        let xArray = post.filter(file => file.id != moveCopyItem.current);\n        setSnackOpen(true);\n        console.log({\n          xArray\n        });\n        setPost(xArray);\n        let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData3 = state.settingData) === null || _state$settingData3 === void 0 ? void 0 : (_state$settingData3$s = _state$settingData3[settingId]) === null || _state$settingData3$s === void 0 ? void 0 : (_state$settingData3$s2 = _state$settingData3$s.breadCrumbs) === null || _state$settingData3$s2 === void 0 ? void 0 : _state$settingData3$s2.length) - 1;\n        let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData4 = state.settingData) === null || _state$settingData4 === void 0 ? void 0 : (_state$settingData4$s = _state$settingData4[settingId]) === null || _state$settingData4$s === void 0 ? void 0 : (_state$settingData4$s2 = _state$settingData4$s.breadCrumbs) === null || _state$settingData4$s2 === void 0 ? void 0 : _state$settingData4$s2[lastIndex].id;\n        state === null || state === void 0 ? void 0 : state.setAddItemSettingData(settingId, lastIndexId, xArray);\n        console.log(res);\n      }).catch(err => console.log(err));\n      console.log({\n        id: moveCopyItem.current\n      });\n    }\n  } // const moveCopyData = (e, data) => {\n  //   console.log(data?.id);\n  //   state?.setPasteChildId(data?.id)\n  // };\n  // const pasteData = (e, data) => {\n  //   console.log({id: state?.pasteChildId});\n  //   // console.log(data?.id);\n  // };\n\n\n  useEffect(() => {\n    console.log({\n      XXXapiSetsDataXXX: state === null || state === void 0 ? void 0 : state.settingData\n    });\n  }, [checker.current]); // async function handleClick(file, data) {\n  //   if (data) {\n  //     console.log({ handleClickIdFound: \"id found handleClick\", file });\n  //     checker.current = checker.current + 1; \n  //     setSearchVal(\"\");\n  //     state?.setApiSettingData(settingId, file, data);\n  //     setPost(data);\n  //   } else {\n  //     try {\n  //       console.log({ handleClickNotFound: \"id not  found handleClick\", file });\n  //       let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\n  //       checker.current = checker.current + 1; \n  //       state?.setApiSettingData(settingId, file, res.data);\n  //       setPost(res.data);\n  //       setSearchVal(\"\");\n  //     } catch (error) {\n  //       console.log({ error });\n  //     }\n  //   }\n  //   // console.log({\n  //   //   file: file?.id,\n  //   //   hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\n  //   //     file?.id\n  //   //   ),\n  //   //   previous: state?.settingData?.[settingId]?.previousData,\n  //   // });\n  //   // if (\n  //   //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\n  //   // ) {\n  //   //   console.log({ handleClickIdFound: \"id found handleClick\", file });\n  //   //   setSearchVal(\"\");\n  //   //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\n  //   //   state?.setApiSettingData(\n  //   //     settingId,\n  //   //     file,\n  //   //     state?.settingData?.[settingId]?.previousData?.[file?.id]\n  //   //   );\n  //   // } else {\n  //   //   try {\n  //   //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\n  //   //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\n  //   //     await state?.setApiSettingData(settingId, file, res.data);\n  //   //     setPost(res.data);\n  //   //     setSearchVal(\"\");\n  //   //   } catch (error) {\n  //   //     console.log({ error });\n  //   //   }\n  //   // }\n  // }\n\n  async function setBreadCrumbsUrl(file) {\n    var _state$settingData5, _state$settingData5$s, _state$settingData5$s2;\n\n    // state?.setBreadCrumbsSettingData(settingId, file);\n    // setPost(data);\n    // console.log({\n    //   breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\n    // });\n    // setSearchVal(\"\");\n    // console.log({\n    //   setBread: {\n    //     data,\n    //     file: file?.id,\n    //     hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\n    //       file?.id\n    //     ),\n    //     settingId: settingId,\n    //     previous: state?.settingData,\n    //   },\n    // });\n    if (state !== null && state !== void 0 && (_state$settingData5 = state.settingData) !== null && _state$settingData5 !== void 0 && (_state$settingData5$s = _state$settingData5[settingId]) !== null && _state$settingData5$s !== void 0 && (_state$settingData5$s2 = _state$settingData5$s.previousData) !== null && _state$settingData5$s2 !== void 0 && _state$settingData5$s2.hasOwnProperty(file === null || file === void 0 ? void 0 : file.id)) {\n      var _state$settingData6, _state$settingData6$s, _state$settingData6$s2, _state$settingData7, _state$settingData7$s;\n\n      console.log({\n        setBreadCrumbsUrlFound: \"id found setBreadCrumbsUrl\"\n      }, file);\n      state === null || state === void 0 ? void 0 : state.setBreadCrumbsSettingData(settingId, file);\n      setPost(state === null || state === void 0 ? void 0 : (_state$settingData6 = state.settingData) === null || _state$settingData6 === void 0 ? void 0 : (_state$settingData6$s = _state$settingData6[settingId]) === null || _state$settingData6$s === void 0 ? void 0 : (_state$settingData6$s2 = _state$settingData6$s.previousData) === null || _state$settingData6$s2 === void 0 ? void 0 : _state$settingData6$s2[file === null || file === void 0 ? void 0 : file.id]);\n      console.log({\n        breadCrumbs: state === null || state === void 0 ? void 0 : (_state$settingData7 = state.settingData) === null || _state$settingData7 === void 0 ? void 0 : (_state$settingData7$s = _state$settingData7[settingId]) === null || _state$settingData7$s === void 0 ? void 0 : _state$settingData7$s.breadCrumbs\n      });\n      setSearchVal(\"\");\n    } else {\n      console.log({\n        setBreadCrumbsUrlNotFount: \"id not Found found setBreadCrumbsUrl\",\n        file\n      });\n\n      try {\n        const response = await ApiCall.getFoldersItem(userAccessToken, file === null || file === void 0 ? void 0 : file.id);\n        state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file === null || file === void 0 ? void 0 : file.id, response.data);\n        state === null || state === void 0 ? void 0 : state.setBreadCrumbsSettingData(settingId, file);\n        setPost(response.data);\n        setSearchVal(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  const [files, setFiles] = React.useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    noClick: true,\n    noKeyboard: true,\n    // accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      console.log(\"File type detection\", acceptedFiles);\n      setOpen(true);\n      setFiles(acceptedFiles.map((file, index) => {\n        if (file.type.split(\"/\")[1] == \"pdf\") return Object.assign(file, {\n          preview: URL.createObjectURL(file),\n          special: true,\n          specialType: \"pdf\",\n          id: index\n        });else if (file.type.split(\"/\")[0] == \"image\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"image\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"zip\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"zip\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"msword\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"msword\",\n            id: index\n          });\n        } else {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"other\",\n            id: index\n          });\n        }\n      }));\n    }\n  });\n\n  const removeFile = deleteFile => {\n    console.log(deleteFile);\n    setFiles(files.filter(file => file.id != deleteFile.id));\n  };\n\n  const uploadFile = folderId => {\n    var _state$settingData8, _state$settingData8$s, _state$settingData8$s2, _state$settingData9, _state$settingData9$s, _state$settingData9$s2;\n\n    // Do something with the files\n    console.log(files);\n    let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData8 = state.settingData) === null || _state$settingData8 === void 0 ? void 0 : (_state$settingData8$s = _state$settingData8[settingId]) === null || _state$settingData8$s === void 0 ? void 0 : (_state$settingData8$s2 = _state$settingData8$s.breadCrumbs) === null || _state$settingData8$s2 === void 0 ? void 0 : _state$settingData8$s2.length) - 1;\n    let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData9 = state.settingData) === null || _state$settingData9 === void 0 ? void 0 : (_state$settingData9$s = _state$settingData9[settingId]) === null || _state$settingData9$s === void 0 ? void 0 : (_state$settingData9$s2 = _state$settingData9$s.breadCrumbs) === null || _state$settingData9$s2 === void 0 ? void 0 : _state$settingData9$s2[lastIndex].id;\n    var myCustomArray = post;\n    files.forEach(async (element, index) => {\n      const data = new FormData();\n      data.append(\"file\", element); // console.warn(element);\n\n      console.log({\n        formData: data,\n        element\n      }); // console.log({fileUploading: myUrl});\n\n      try {\n        var _state$settingData10, _state$settingData10$;\n\n        const response = await ApiCall.fileUploader(state === null || state === void 0 ? void 0 : (_state$settingData10 = state.settingData) === null || _state$settingData10 === void 0 ? void 0 : (_state$settingData10$ = _state$settingData10[settingId]) === null || _state$settingData10$ === void 0 ? void 0 : _state$settingData10$.userAccessToken, data, lastIndexId);\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\n        myCustomArray.unshift(myCustomFile);\n        console.log({\n          myCustomArray: myCustomArray\n        });\n        state === null || state === void 0 ? void 0 : state.setAddItemSettingData(settingId, lastIndexId, myCustomArray);\n        setPost(myCustomArray);\n        setSnackOpen(true);\n        console.log({\n          post: post\n        });\n      } catch (error) {\n        console.log({\n          error: error\n        });\n      }\n    });\n    setFiles([]);\n  };\n\n  const thumbs = files.length ? /*#__PURE__*/_jsxDEV(ModalFileUpload, {\n    files: files,\n    removeFile: removeFile,\n    open: open,\n    setOpen: setOpen,\n    handleCloseModal: handleCloseModal,\n    uploadFile: uploadFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...getRootProps({\n      className: \"dropzone disabled\"\n    }),\n    children: [filteredData && !(state !== null && state !== void 0 && state.loading) && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(CustomSeparator, {\n        settingId: settingId,\n        setBreadCrumbsUrl: setBreadCrumbsUrl,\n        searchVal: searchVal,\n        setSearchVal: setSearchVal,\n        handleClickOpen: handleClickOpen,\n        setPost: setPost,\n        post: post,\n        setSnackOpen: setSnackOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), filteredData.length === 0 && !(state !== null && state !== void 0 && state.loading) && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      fullheight: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fullwidth: true,\n        variant: \"h1\",\n        component: \"div\",\n        children: \"Nothing here!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this), filteredData.length !== 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      sx: {\n        padding: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        spacing: 2,\n        children: [filteredData.filter(file => file.attributes.type === \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 3\n          } // columns={{ xs: 4, sm: 8, md: 12 }}\n          ,\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type == \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: handleClick,\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveCopyData: moveCopyData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [filteredData.filter(file => file.attributes.type !== \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this), !(state !== null && state !== void 0 && (_state$settingData11 = state.settingData) !== null && _state$settingData11 !== void 0 && (_state$settingData11$ = _state$settingData11[settingId]) !== null && _state$settingData11$ !== void 0 && _state$settingData11$.listView) ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: true ? {\n            xs: 2,\n            md: 4\n          } : {},\n          rowSpacing: false ? 0 : 1,\n          columnSpacing: false ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: handleClick,\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveCopyData: moveCopyData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: state !== null && state !== void 0 && (_state$settingData12 = state.settingData) !== null && _state$settingData12 !== void 0 && (_state$settingData12$ = _state$settingData12[settingId]) !== null && _state$settingData12$ !== void 0 && _state$settingData12$.listView ? {\n            xs: 2,\n            md: 3\n          } : {},\n          columns: state !== null && state !== void 0 && (_state$settingData13 = state.settingData) !== null && _state$settingData13 !== void 0 && (_state$settingData13$ = _state$settingData13[settingId]) !== null && _state$settingData13$ !== void 0 && _state$settingData13$.listView ? {\n            xs: 4,\n            sm: 8,\n            md: 12\n          } : {},\n          rowSpacing: state !== null && state !== void 0 && (_state$settingData14 = state.settingData) !== null && _state$settingData14 !== void 0 && (_state$settingData14$ = _state$settingData14[settingId]) !== null && _state$settingData14$ !== void 0 && _state$settingData14$.listView ? 0 : 1,\n          columnSpacing: state !== null && state !== void 0 && (_state$settingData15 = state.settingData) !== null && _state$settingData15 !== void 0 && (_state$settingData15$ = _state$settingData15[settingId]) !== null && _state$settingData15$ !== void 0 && _state$settingData15$.listView ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: handleClick,\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveCopyData: moveCopyData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SnackAlert, {\n      snackOpen: snackOpen,\n      handleCloseSnack: handleCloseSnack,\n      severity: \"success\",\n      message: \"This is a success message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Response, \"525Z+YT6x/dmJIA2bXjJQeIVRao=\", false, function () {\n  return [useTrackedStore, useTableSearch, useDropzone];\n});\n\n_c = Response;\nexport default Response;\n\nvar _c;\n\n$RefreshReg$(_c, \"Response\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/Response.js"],"names":["React","useEffect","useState","useCallback","useRef","useDropzone","CommonComponent","useTrackedStore","Typography","Grid","useTableSearch","CustomSeparator","Box","ModalFileUpload","ApiCall","FileUploadResponse","SnackAlert","thumbsContainer","display","flexDirection","flexWrap","marginTop","Response","props","rootFolderId","userAccessToken","name","settingId","post","setPost","searchVal","setSearchVal","handleClick","state","snackOpen","setSnackOpen","open","setOpen","moveCopyItem","checker","handleClickOpen","filteredData","loading","retrieve","scriptLoaded","window","A","sort","handleCloseModal","moveCopyData","e","data","current","console","log","pasteData","type","file","id","pasteFile","attributes","settingData","previousData","moveFile","token","then","res","xArray","filter","lastIndex","breadCrumbs","length","lastIndexId","setAddItemSettingData","catch","err","XXXapiSetsDataXXX","setBreadCrumbsUrl","hasOwnProperty","setBreadCrumbsUrlFound","setBreadCrumbsSettingData","setBreadCrumbsUrlNotFount","response","getFoldersItem","setApiSettingData","error","files","setFiles","getRootProps","getInputProps","noClick","noKeyboard","onDrop","acceptedFiles","map","index","split","Object","assign","preview","URL","createObjectURL","special","specialType","removeFile","deleteFile","uploadFile","folderId","myCustomArray","forEach","element","FormData","append","formData","fileUploader","myCustomFile","makeCustomFile","unshift","thumbs","revokeObjectURL","handleCloseSnack","event","reason","className","xs","md","padding","textAlign","listView","sm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport CommonComponent from \"./CommonComponent\";\r\nimport useTrackedStore from \"./../../store/useTrackedStore\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useTableSearch } from \"./UseTableSearch\";\r\nimport CustomSeparator from \"./BreadCumb\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport ModalFileUpload from \"./ModalFileUpload\";\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\r\nimport SnackAlert from \"./SnackAlert\";\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nfunction Response(props) {\r\n  // const { rootFolderId, userAccessToken, name, settingId} = props;\r\n  const { rootFolderId, userAccessToken, name, settingId, post, setPost, searchVal, setSearchVal, handleClick } = props;\r\n  const state = useTrackedStore();\r\n  // const [post, setPost] = React.useState([]);\r\n  // const [searchVal, setSearchVal] = React.useState(\"\");\r\n  const [snackOpen, setSnackOpen] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  let moveCopyItem = useRef(null);\r\n  let checker = useRef(0);\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const { filteredData, loading } = useTableSearch({\r\n    searchVal,\r\n    retrieve: post ?? [],\r\n  });\r\n\r\n  // useEffect(async () => {\r\n  //   setSearchVal(\"\");\r\n  //   if (\r\n  //     !state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n  //       rootFolderId\r\n  //     )\r\n  //   ) {\r\n  //     let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\r\n  //     try {\r\n  //       setPost(res.data);\r\n  //       state?.setApiSettingData(settingId, rootFolderId, res.data);\r\n  //       state?.setLoading(false);\r\n  //     } catch (error) {\r\n  //       console.log({ error });\r\n  //     }\r\n  //   } else {\r\n  //     let lastIndex = state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n  //     let lastIndexId =\r\n  //       state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n  //     console.log({\r\n  //       lastData: state?.settingData?.[settingId]?.previousData?.[lastIndexId],\r\n  //     });\r\n  //     setPost(state?.settingData?.[settingId]?.previousData?.[lastIndexId]);\r\n  //   }\r\n  // }, [userAccessToken, rootFolderId, settingId]);\r\n\r\n  function scriptLoaded() {\r\n    window.A.sort();\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function moveCopyData(e, data) {\r\n    moveCopyItem.current = data;\r\n    // moveCopyItem.type = \"move\";\r\n    console.log({ moveCopyItem });\r\n  }\r\n\r\n  async function pasteData(e, data) {\r\n    if (\r\n      moveCopyItem?.current?.type &&\r\n      moveCopyItem?.current?.file?.id !== data?.id &&\r\n      data?.pasteFile?.attributes?.type === \"folder\"\r\n    ) {\r\n      console.log(\"Paste True\");\r\n      console.log(data?.pasteFile?.id); // pastePost\r\n      if (moveCopyItem?.current?.type===\"copy\") {\r\n        if (state.settingData?.[settingId]?.previousData?.[data?.pasteFile?.id]) {\r\n          console.log(\"Copy Folder exist in state\");\r\n        }else{\r\n          console.log(\"Copy Folder doesn't exist\");\r\n        }\r\n      }else if (moveCopyItem?.current?.type===\"move\") {\r\n        // const res = await ApiCall.moveFile(userAccessToken, data?.pasteFile, moveCopyItem?.current?.file?.id);\r\n        // let xArray = data?.pastePost?.filter((file) => file.id != moveCopyItem?.current?.file?.id);\r\n        // setSnackOpen(true);\r\n        if (state.settingData?.[settingId]?.previousData?.[data?.pasteFile?.id]) {\r\n          console.log(\"Move Folder exist in state\");\r\n        }else{\r\n          console.log(\"Move Folder doesn't exist\");\r\n        }\r\n      }\r\n\r\n      // if (data?.id === lastIndexId) {\r\n      //   console.log(\"Same dir\");\r\n      // } else {\r\n      //   console.log(\"Different Dir\");\r\n      // }\r\n    } else {\r\n      console.log(\"Paste false\");\r\n    }\r\n    if (false) {\r\n      ApiCall.moveFile(state?.token, data, moveCopyItem.current)\r\n        .then((res) => {\r\n          let xArray = post.filter((file) => file.id != moveCopyItem.current);\r\n          setSnackOpen(true);\r\n          console.log({ xArray });\r\n          setPost(xArray);\r\n\r\n          let lastIndex =\r\n            state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n          let lastIndexId =\r\n            state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n\r\n          state?.setAddItemSettingData(settingId, lastIndexId, xArray);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log({ id: moveCopyItem.current });\r\n    }\r\n  }\r\n\r\n  // const moveCopyData = (e, data) => {\r\n  //   console.log(data?.id);\r\n  //   state?.setPasteChildId(data?.id)\r\n  // };\r\n\r\n  // const pasteData = (e, data) => {\r\n  //   console.log({id: state?.pasteChildId});\r\n  //   // console.log(data?.id);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log({ XXXapiSetsDataXXX: state?.settingData });\r\n  }, [checker.current]);\r\n\r\n  // async function handleClick(file, data) {\r\n  //   if (data) {\r\n  //     console.log({ handleClickIdFound: \"id found handleClick\", file });\r\n  //     checker.current = checker.current + 1; \r\n  //     setSearchVal(\"\");\r\n  //     state?.setApiSettingData(settingId, file, data);\r\n  //     setPost(data);\r\n  //   } else {\r\n  //     try {\r\n  //       console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n  //       let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n  //       checker.current = checker.current + 1; \r\n\r\n  //       state?.setApiSettingData(settingId, file, res.data);\r\n  //       setPost(res.data);\r\n  //       setSearchVal(\"\");\r\n  //     } catch (error) {\r\n  //       console.log({ error });\r\n  //     }\r\n  //   }\r\n\r\n  //   // console.log({\r\n  //   //   file: file?.id,\r\n  //   //   hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n  //   //     file?.id\r\n  //   //   ),\r\n  //   //   previous: state?.settingData?.[settingId]?.previousData,\r\n  //   // });\r\n  //   // if (\r\n  //   //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\r\n  //   // ) {\r\n  //   //   console.log({ handleClickIdFound: \"id found handleClick\", file });\r\n  //   //   setSearchVal(\"\");\r\n  //   //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\r\n  //   //   state?.setApiSettingData(\r\n  //   //     settingId,\r\n  //   //     file,\r\n  //   //     state?.settingData?.[settingId]?.previousData?.[file?.id]\r\n  //   //   );\r\n  //   // } else {\r\n  //   //   try {\r\n  //   //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n  //   //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n\r\n  //   //     await state?.setApiSettingData(settingId, file, res.data);\r\n  //   //     setPost(res.data);\r\n  //   //     setSearchVal(\"\");\r\n  //   //   } catch (error) {\r\n  //   //     console.log({ error });\r\n  //   //   }\r\n  //   // }\r\n  // }\r\n\r\n  async function setBreadCrumbsUrl(file) {\r\n    // state?.setBreadCrumbsSettingData(settingId, file);\r\n    // setPost(data);\r\n    // console.log({\r\n    //   breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\r\n    // });\r\n    // setSearchVal(\"\");\r\n    // console.log({\r\n    //   setBread: {\r\n    //     data,\r\n    //     file: file?.id,\r\n    //     hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n    //       file?.id\r\n    //     ),\r\n    //     settingId: settingId,\r\n    //     previous: state?.settingData,\r\n    //   },\r\n    // });\r\n    if (\r\n      state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\r\n    ) {\r\n      console.log(\r\n        { setBreadCrumbsUrlFound: \"id found setBreadCrumbsUrl\" },\r\n        file\r\n      );\r\n      state?.setBreadCrumbsSettingData(settingId, file);\r\n      setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\r\n      console.log({\r\n        breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\r\n      });\r\n      setSearchVal(\"\");\r\n    } else {\r\n      console.log({\r\n        setBreadCrumbsUrlNotFount: \"id not Found found setBreadCrumbsUrl\",\r\n        file,\r\n      });\r\n      try {\r\n        const response = await ApiCall.getFoldersItem(\r\n          userAccessToken,\r\n          file?.id\r\n        );\r\n\r\n        state?.setApiSettingData(settingId, file?.id, response.data);\r\n        state?.setBreadCrumbsSettingData(settingId, file);\r\n        setPost(response.data);\r\n        setSearchVal(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const [files, setFiles] = React.useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    // accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      console.log(\"File type detection\", acceptedFiles);\r\n      setOpen(true);\r\n      setFiles(\r\n        acceptedFiles.map((file, index) => {\r\n          if (file.type.split(\"/\")[1] == \"pdf\")\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: true,\r\n              specialType: \"pdf\",\r\n              id: index,\r\n            });\r\n          else if (file.type.split(\"/\")[0] == \"image\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"image\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"zip\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"zip\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"msword\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"msword\",\r\n              id: index,\r\n            });\r\n          } else {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"other\",\r\n              id: index,\r\n            });\r\n          }\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  const removeFile = (deleteFile) => {\r\n    console.log(deleteFile);\r\n    setFiles(files.filter((file) => file.id != deleteFile.id));\r\n  };\r\n\r\n  const uploadFile = (folderId) => {\r\n    // Do something with the files\r\n    console.log(files);\r\n    let lastIndex = state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n    let lastIndexId =\r\n      state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n    var myCustomArray = post;\r\n    files.forEach(async (element, index) => {\r\n      const data = new FormData();\r\n      data.append(\"file\", element);\r\n      // console.warn(element);\r\n      console.log({\r\n        formData: data,\r\n        element,\r\n      });\r\n      // console.log({fileUploading: myUrl});\r\n      try {\r\n        const response = await ApiCall.fileUploader(\r\n          state?.settingData?.[settingId]?.userAccessToken,\r\n          data,\r\n          lastIndexId\r\n        );\r\n\r\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\r\n        myCustomArray.unshift(myCustomFile);\r\n        console.log({ myCustomArray: myCustomArray });\r\n        state?.setAddItemSettingData(settingId, lastIndexId, myCustomArray);\r\n        setPost(myCustomArray);\r\n        setSnackOpen(true);\r\n        console.log({ post: post });\r\n      } catch (error) {\r\n        console.log({ error: error });\r\n      }\r\n    });\r\n    setFiles([]);\r\n  };\r\n\r\n  const thumbs = files.length ? (\r\n    <ModalFileUpload\r\n      files={files}\r\n      removeFile={removeFile}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleCloseModal={handleCloseModal}\r\n      uploadFile={uploadFile}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      {...getRootProps({ className: \"dropzone disabled\" })}\r\n    >\r\n      {/* <Grid item container>\r\n        <CustomSeparator\r\n          settingId={settingId}\r\n          setBreadCrumbsUrl={setBreadCrumbsUrl}\r\n          searchVal={searchVal}\r\n          setSearchVal={setSearchVal}\r\n          handleClickOpen={handleClickOpen}\r\n          setPost={setPost}\r\n          post={post}\r\n          setSnackOpen={setSnackOpen}\r\n        />\r\n      </Grid> */}\r\n      {filteredData && !state?.loading && (\r\n        <Grid item container>\r\n        <CustomSeparator\r\n          settingId={settingId}\r\n          setBreadCrumbsUrl={setBreadCrumbsUrl}\r\n          searchVal={searchVal}\r\n          setSearchVal={setSearchVal}\r\n          handleClickOpen={handleClickOpen}\r\n          setPost={setPost}\r\n          post={post}\r\n          setSnackOpen={setSnackOpen}\r\n        />\r\n      </Grid>\r\n      )}\r\n      <input {...getInputProps()} />\r\n      <div style={thumbsContainer}>{thumbs}</div>\r\n\r\n      {filteredData.length === 0 && !state?.loading && (\r\n        <Grid item fullheight justifyContent=\"center\">\r\n          <Typography fullwidth variant=\"h1\" component=\"div\">\r\n            Nothing here!!!\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {/* <div>{JSON.stringify(post??[])}</div> */}\r\n      {filteredData.length !== 0 && (\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          spacing={{ xs: 2, md: 3 }}\r\n          sx={{ padding: 5 }}\r\n        >\r\n          <Grid item xs={12} spacing={2}>\r\n            {filteredData.filter((file) => file.attributes.type === \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Folder\r\n              </Typography>\r\n            )}\r\n\r\n            <Grid\r\n              container\r\n              spacing={{ xs: 2, md: 3 }}\r\n              // columns={{ xs: 4, sm: 8, md: 12 }}\r\n            >\r\n              {filteredData?.map((file, index) => {\r\n                if (file.attributes.type == \"folder\")\r\n                  return (\r\n                    <Grid item xs={12} sm={4} md={3}>\r\n                      <CommonComponent\r\n                        settingId={settingId}\r\n                        file={file}\r\n                        handleClick={handleClick}\r\n                        setPost={setPost}\r\n                        post={post}\r\n                        setSnackOpen={setSnackOpen}\r\n                        moveCopyData={moveCopyData}\r\n                        pasteData={pasteData}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {filteredData.filter((file) => file.attributes.type !== \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Files\r\n              </Typography>\r\n            )}\r\n\r\n            {!state?.settingData?.[settingId]?.listView ? (\r\n              <Grid\r\n                container\r\n                spacing={true ? { xs: 2, md: 4 } : {}}\r\n                rowSpacing={false ? 0 : 1}\r\n                columnSpacing={false ? {} : { xs: 1, sm: 2, md: 3 }}\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} sm={6} md={4}>\r\n                        <CommonComponent\r\n                          settingId={settingId}\r\n                          file={file}\r\n                          handleClick={handleClick}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveCopyData={moveCopyData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            ) : (\r\n              <Grid\r\n                container\r\n                spacing={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? { xs: 2, md: 3 }\r\n                    : {}\r\n                }\r\n                columns={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? { xs: 4, sm: 8, md: 12 }\r\n                    : {}\r\n                }\r\n                rowSpacing={state?.settingData?.[settingId]?.listView ? 0 : 1}\r\n                columnSpacing={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? {}\r\n                    : { xs: 1, sm: 2, md: 3 }\r\n                }\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} md={3}>\r\n                        <CommonComponent\r\n                          settingId={settingId}\r\n                          file={file}\r\n                          handleClick={handleClick}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveCopyData={moveCopyData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <SnackAlert\r\n        snackOpen={snackOpen}\r\n        handleCloseSnack={handleCloseSnack}\r\n        severity={\"success\"}\r\n        message={\"This is a success message!\"}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Response;\r\n"]},"metadata":{},"sourceType":"module"}