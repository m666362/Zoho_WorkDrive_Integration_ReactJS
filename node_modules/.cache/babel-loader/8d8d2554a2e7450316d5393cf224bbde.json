{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\MyRes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useTrackedStore from \"../../store/useTrackedStore\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport Response from \"./Response\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MyRes(props) {\n  _s();\n\n  const {\n    rootFolderId,\n    userAccessToken,\n    name,\n    settingId\n  } = props;\n  const state = useTrackedStore();\n  const [post, setPost] = useState([]);\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [file, setFile] = useState({});\n  useEffect(async () => {\n    if (file !== null && file !== void 0 && file.id) {\n      try {\n        console.log({\n          handleClickNotFound: \"id not  found handleClick\",\n          file\n        });\n        let res = await ApiCall.getFoldersItem(userAccessToken, file === null || file === void 0 ? void 0 : file.id);\n        await (state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file, res.data));\n        await setPost(res.data);\n        await setSearchVal(\"\");\n      } catch (error) {\n        console.log({\n          error\n        });\n      }\n    }\n  }, [file === null || file === void 0 ? void 0 : file.id]);\n  useEffect(async () => {\n    setSearchVal(\"\");\n\n    if (rootFolderId) {\n      var _state$settingData, _state$settingData$se, _state$settingData$se2;\n\n      if (!(state !== null && state !== void 0 && (_state$settingData = state.settingData) !== null && _state$settingData !== void 0 && (_state$settingData$se = _state$settingData[settingId]) !== null && _state$settingData$se !== void 0 && (_state$settingData$se2 = _state$settingData$se.previousData) !== null && _state$settingData$se2 !== void 0 && _state$settingData$se2.hasOwnProperty(rootFolderId))) {\n        let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\n\n        try {\n          setPost(res.data);\n          state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, rootFolderId, res.data);\n          state === null || state === void 0 ? void 0 : state.setLoading(false);\n        } catch (error) {\n          console.log({\n            error\n          });\n        }\n      } else {\n        var _state$settingData2, _state$settingData2$s, _state$settingData2$s2, _state$settingData3, _state$settingData3$s, _state$settingData3$s2, _state$settingData4, _state$settingData4$s, _state$settingData4$s2, _state$settingData5, _state$settingData5$s, _state$settingData5$s2;\n\n        let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData2 = state.settingData) === null || _state$settingData2 === void 0 ? void 0 : (_state$settingData2$s = _state$settingData2[settingId]) === null || _state$settingData2$s === void 0 ? void 0 : (_state$settingData2$s2 = _state$settingData2$s.breadCrumbs) === null || _state$settingData2$s2 === void 0 ? void 0 : _state$settingData2$s2.length) - 1;\n        let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData3 = state.settingData) === null || _state$settingData3 === void 0 ? void 0 : (_state$settingData3$s = _state$settingData3[settingId]) === null || _state$settingData3$s === void 0 ? void 0 : (_state$settingData3$s2 = _state$settingData3$s.breadCrumbs) === null || _state$settingData3$s2 === void 0 ? void 0 : _state$settingData3$s2[lastIndex].id;\n        console.log({\n          lastData: state === null || state === void 0 ? void 0 : (_state$settingData4 = state.settingData) === null || _state$settingData4 === void 0 ? void 0 : (_state$settingData4$s = _state$settingData4[settingId]) === null || _state$settingData4$s === void 0 ? void 0 : (_state$settingData4$s2 = _state$settingData4$s.previousData) === null || _state$settingData4$s2 === void 0 ? void 0 : _state$settingData4$s2[lastIndexId]\n        });\n        state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file, res.data);\n        setPost(state === null || state === void 0 ? void 0 : (_state$settingData5 = state.settingData) === null || _state$settingData5 === void 0 ? void 0 : (_state$settingData5$s = _state$settingData5[settingId]) === null || _state$settingData5$s === void 0 ? void 0 : (_state$settingData5$s2 = _state$settingData5$s.previousData) === null || _state$settingData5$s2 === void 0 ? void 0 : _state$settingData5$s2[lastIndexId]);\n      }\n    }\n  }, [userAccessToken, rootFolderId, settingId]);\n\n  function handleClick(file, data) {\n    if (data) {\n      console.log({\n        handleClickIdFound: \"id found handleClick\",\n        file\n      });\n      setSearchVal(\"\");\n      state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file, data);\n      setPost(data);\n    } else {\n      setFile(file); //   try {\n      //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\n      //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\n      //     state?.setApiSettingData(settingId, file, res.data);\n      //     setPost(res.data);\n      //     setSearchVal(\"\");\n      //   } catch (error) {\n      //     console.log({ error });\n      //   }\n    } // console.log({\n    //   file: file?.id,\n    //   hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\n    //     file?.id\n    //   ),\n    //   previous: state?.settingData?.[settingId]?.previousData,\n    // });\n    // if (\n    //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\n    // ) {\n    //   console.log({ handleClickIdFound: \"id found handleClick\", file });\n    //   setSearchVal(\"\");\n    //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\n    //   state?.setApiSettingData(\n    //     settingId,\n    //     file,\n    //     state?.settingData?.[settingId]?.previousData?.[file?.id]\n    //   );\n    // } else {\n    //   try {\n    //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\n    //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\n    //     await state?.setApiSettingData(settingId, file, res.data);\n    //     setPost(res.data);\n    //     setSearchVal(\"\");\n    //   } catch (error) {\n    //     console.log({ error });\n    //   }\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rootFolderId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Response, {\n        rootFolderId: rootFolderId,\n        userAccessToken: userAccessToken,\n        name: name,\n        settingId: settingId,\n        post: post,\n        setPost: setPost,\n        searchVal: searchVal,\n        setSearchVal: setSearchVal,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        sx: {\n          color: \"#fff\",\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        open: state.loading,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(MyRes, \"TgiLvVb0LJIpX/4e20nUtZWAzI8=\", false, function () {\n  return [useTrackedStore];\n});\n\n_c = MyRes;\nexport default MyRes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRes\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/MyRes.js"],"names":["React","useEffect","useState","useTrackedStore","ApiCall","Response","Backdrop","CircularProgress","MyRes","props","rootFolderId","userAccessToken","name","settingId","state","post","setPost","searchVal","setSearchVal","file","setFile","id","console","log","handleClickNotFound","res","getFoldersItem","setApiSettingData","data","error","settingData","previousData","hasOwnProperty","setLoading","lastIndex","breadCrumbs","length","lastIndexId","lastData","handleClick","handleClickIdFound","color","zIndex","theme","drawer","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport useTrackedStore from \"../../store/useTrackedStore\";\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport Response from \"./Response\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction MyRes(props) {\r\n  const { rootFolderId, userAccessToken, name, settingId } = props;\r\n  const state = useTrackedStore();\r\n  const [post, setPost] = useState([]);\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [file, setFile] = useState({});\r\n\r\n  useEffect(async () => {\r\n    if (file?.id) {\r\n      try {\r\n        console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n        let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n        await state?.setApiSettingData(settingId, file, res.data);\r\n        await setPost(res.data);\r\n        await setSearchVal(\"\");\r\n      } catch (error) {\r\n        console.log({ error });\r\n      }\r\n    }\r\n  }, [file?.id]);\r\n\r\n  useEffect(async () => {\r\n    setSearchVal(\"\");\r\n    if (rootFolderId) {\r\n      if (\r\n        !state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n          rootFolderId\r\n        )\r\n      ) {\r\n        let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\r\n        try {\r\n          setPost(res.data);\r\n          state?.setApiSettingData(settingId, rootFolderId, res.data);\r\n          state?.setLoading(false);\r\n        } catch (error) {\r\n          console.log({ error });\r\n        }\r\n      } else {\r\n        let lastIndex =\r\n          state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n        let lastIndexId =\r\n          state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n        console.log({\r\n          lastData:\r\n            state?.settingData?.[settingId]?.previousData?.[lastIndexId],\r\n        });\r\n        state?.setApiSettingData(settingId, file, res.data);\r\n        setPost(state?.settingData?.[settingId]?.previousData?.[lastIndexId]);\r\n      }\r\n    }\r\n  }, [userAccessToken, rootFolderId, settingId]);\r\n\r\n  function handleClick(file, data) {\r\n    if (data) {\r\n      console.log({ handleClickIdFound: \"id found handleClick\", file });\r\n      setSearchVal(\"\");\r\n      state?.setApiSettingData(settingId, file, data);\r\n      setPost(data);\r\n    } else {\r\n      setFile(file);\r\n      //   try {\r\n      //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n      //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n      //     state?.setApiSettingData(settingId, file, res.data);\r\n      //     setPost(res.data);\r\n      //     setSearchVal(\"\");\r\n      //   } catch (error) {\r\n      //     console.log({ error });\r\n      //   }\r\n    }\r\n\r\n    // console.log({\r\n    //   file: file?.id,\r\n    //   hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n    //     file?.id\r\n    //   ),\r\n    //   previous: state?.settingData?.[settingId]?.previousData,\r\n    // });\r\n    // if (\r\n    //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\r\n    // ) {\r\n    //   console.log({ handleClickIdFound: \"id found handleClick\", file });\r\n    //   setSearchVal(\"\");\r\n    //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\r\n    //   state?.setApiSettingData(\r\n    //     settingId,\r\n    //     file,\r\n    //     state?.settingData?.[settingId]?.previousData?.[file?.id]\r\n    //   );\r\n    // } else {\r\n    //   try {\r\n    //     console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n    //     let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n\r\n    //     await state?.setApiSettingData(settingId, file, res.data);\r\n    //     setPost(res.data);\r\n    //     setSearchVal(\"\");\r\n    //   } catch (error) {\r\n    //     console.log({ error });\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {rootFolderId && (\r\n        <>\r\n          <Response\r\n            rootFolderId={rootFolderId}\r\n            userAccessToken={userAccessToken}\r\n            name={name}\r\n            settingId={settingId}\r\n            post={post}\r\n            setPost={setPost}\r\n            searchVal={searchVal}\r\n            setSearchVal={setSearchVal}\r\n            handleClick={handleClick}\r\n          />\r\n          <Backdrop\r\n            sx={{\r\n              color: \"#fff\",\r\n              zIndex: (theme) => theme.zIndex.drawer + 1,\r\n            }}\r\n            open={state.loading}\r\n          >\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyRes;\r\n"]},"metadata":{},"sourceType":"module"}