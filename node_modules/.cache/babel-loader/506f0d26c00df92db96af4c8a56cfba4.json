{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\WorkDrive\\\\DisplayFile.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowLefttIcon from \"@material-ui/icons/ArrowLeft\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { Document, Page } from \"react-pdf\";\nimport { useReactToPrint } from \"react-to-print\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"./project_folder.css\";\nimport ModalImage from \"./ModalImage\";\nimport useTrackedStore from \"../../store/useTrackedStore\";\nimport ModalFile from \"./ModalFile\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomImage = styled(\"img\")(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"200px\",\n      height: \"170px\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"300px\",\n      height: \"170px\"\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      width: \"433px\",\n      height: \"317px\"\n    }\n  };\n});\nconst BoxThumb = styled(\"Box\")(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    minHeight: \"100%\",\n    minWidth: \"100%\" // [theme.breakpoints.down(\"md\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n    // [theme.breakpoints.up(\"md\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n    // [theme.breakpoints.up(\"xl\")]: {\n    //   width: \"200px\",\n    //   height: \"170px\",\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\",\n    // },\n\n  };\n}); //  sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", ...CustomImage}}\n\nconst useStyles = makeStyles({\n  fileroot: {\n    border: \"2px solid #E0E0E0\",\n    borderRadius: \"5px\",\n    minHeight: \"300px\",\n    \"&:hover\": {\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\n      transitionDuration: \"0.3s\"\n    },\n    \"&:focus\": {\n      border: \"2px solid #28B294\"\n    }\n  },\n  item: {\n    textAlign: \"left !important\"\n  },\n  image: {\n    width: \"200px\",\n    height: \"150px\"\n  }\n});\nexport default function FileImageCard(_ref3) {\n  _s();\n\n  let {\n    file\n  } = _ref3;\n  const [open, setOpen] = React.useState(false);\n  const state = useTrackedStore();\n  const [profileImage, setProfileImage] = React.useState();\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n  const componentRef = React.useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  const getUserImage = async file => {\n    var _file, _file2;\n\n    // let res = await axios({\n    //   method: \"get\",\n    //   headers: {\n    //     Accept: \"application/vnd.api+json\",\n    //     Authorization: state.token,\n    //   },\n    //   responseType: \"blob\",\n    //   url: `https://workdrive.zoho.com/api/v1/download/${file?.id}`,\n    // });\n    // setTheArray(oldArray => [...oldArray, newElement]);\n    // let reader = new window.FileReader();\n    // reader.readAsDataURL(res.data);\n    // reader.onload = function () {\n    //   let imageDataUrl = reader.result;\n    //   console.log(imageDataUrl);\n    //   setProfileImage(imageDataUrl);\n    //   setLoading(false);\n    // };\n    // , { type: \"application/pdf\" }\n    console.log(\"file.attributes.thumbnail_url\", (_file = file) === null || _file === void 0 ? void 0 : _file.attributes.thumbnail_url);\n    let res = await ApiCall.getImageResponse(state === null || state === void 0 ? void 0 : state.token, file);\n    console.log({\n      res,\n      id: (_file2 = file) === null || _file2 === void 0 ? void 0 : _file2.id\n    });\n    var file = new Blob([res.data]);\n    var fileURL = URL.createObjectURL(file);\n    console.log(\"fileURL\", fileURL);\n    setProfileImage(fileURL);\n    setLoading(false); // window.open(fileURL);\n  };\n\n  React.useEffect(async () => {\n    // console.log({\n    //   url: `https://previewengine-accl.zoho.com/thumbnail/WD/${file?.id}`,\n    // });\n    // let resData = await axios({\n    //   method: \"get\",\n    //   headers: {\n    //     Authorization: state.token,\n    //   },\n    //   responseType: \"blob\",\n    //   url: `https://previewengine-accl.zoho.com/thumbnail/WD/${file?.id}`,\n    // });\n    // console.log(file);\n    // console.log({ ThumbRes: resData });\n    let resData = await ApiCall.getThumbnailData(state === null || state === void 0 ? void 0 : state.token, file);\n    var blodData = new Blob([resData.data]);\n    var urlData = URL.createObjectURL(blodData); // console.log({urlData: urlData});\n    // console.log(\"fileURL\", fileURL);\n\n    setThumbnailUrl(urlData);\n  }, [file === null || file === void 0 ? void 0 : file.attributes.thumbnail_url]); // React.useEffect(() => {\n  //   getThumbNailImage(file)\n  // }, []);\n\n  const handleClickOpen = file => {\n    console.log({\n      file: file\n    });\n    getUserImage(file);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    console.log(\"close dialog\");\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      tabIndex: \"1\",\n      className: classes.fileroot,\n      onClick: () => handleClickOpen(file),\n      children: [/*#__PURE__*/_jsxDEV(BoxThumb, {\n        children: /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n          sx: {\n            width: 200,\n            height: 230\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: file === null || file === void 0 ? void 0 : file.attributes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: file === null || file === void 0 ? void 0 : file.attributes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFile, {\n      open: open,\n      setOpen: setOpen,\n      profileImage: profileImage,\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this) // <div xs={12}>\n  //   <Card\n  //     display={\"inline\"}\n  //     sx={{ maxWidth: 345 }}\n  //     onClick={() => handleClickOpen(file)}\n  //   >\n  //     <CardActionArea>\n  //       <CardMedia\n  //         component=\"img\"\n  //         height=\"100\"\n  //         image={thumbnailImage}\n  //         alt={file?.attributes.name}\n  //       />\n  //       <CardContent>\n  //         <Typography gutterBottom variant=\"h5\" component=\"div\">\n  //           {file?.attributes.name}\n  //         </Typography>\n  //       </CardContent>\n  //     </CardActionArea>\n  //   </Card>\n  //   <Dialog\n  //     fullScreen\n  //     open={open}\n  //     onClose={handleClose}\n  //     TransitionComponent={Transition}\n  //   >\n  //     <AppBar sx={{ position: \"relative\" }}>\n  //\n  // </div>\n  ;\n}\n\n_s(FileImageCard, \"CPetjvyvpKMDNDR1DOV4asm5uBU=\", false, function () {\n  return [useTrackedStore, useReactToPrint, useStyles];\n});\n\n_c = FileImageCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileImageCard\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/WorkDrive/DisplayFile.js"],"names":["React","Card","CardActionArea","CardContent","CardMedia","Grid","Typography","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","ArrowRightIcon","ArrowLefttIcon","DescriptionIcon","CloseIcon","Slide","Document","Page","useReactToPrint","Box","Paper","experimentalStyled","styled","makeStyles","CircularProgress","ModalImage","useTrackedStore","ModalFile","ApiCall","CustomImage","theme","breakpoints","down","width","height","up","BoxThumb","minHeight","minWidth","useStyles","fileroot","border","borderRadius","boxShadow","transitionDuration","item","textAlign","image","FileImageCard","file","open","setOpen","useState","state","profileImage","setProfileImage","thumbnailImage","setThumbnailUrl","loading","setLoading","componentRef","useRef","handlePrint","content","current","getUserImage","console","log","attributes","thumbnail_url","res","getImageResponse","token","id","Blob","data","fileURL","URL","createObjectURL","useEffect","resData","getThumbnailData","blodData","urlData","handleClickOpen","handleClose","classes","name"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport ArrowLefttIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport DescriptionIcon from \"@mui/icons-material/Description\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Document, Page } from \"react-pdf\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport \"./project_folder.css\";\r\nimport ModalImage from \"./ModalImage\";\r\nimport useTrackedStore from \"../../store/useTrackedStore\";\r\nimport ModalFile from \"./ModalFile\";\r\n\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nconst CustomImage = styled(\"img\")(({ theme }) => ({\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"200px\",\r\n    height: \"170px\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    width: \"300px\",\r\n    height: \"170px\",\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n    width: \"433px\",\r\n    height: \"317px\",\r\n  },\r\n}));\r\n\r\nconst BoxThumb = styled(\"Box\")(({ theme }) => ({\r\n  \r\n  minHeight: \"100%\",\r\n  minWidth: \"100%\",\r\n\r\n  // [theme.breakpoints.down(\"md\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // [theme.breakpoints.up(\"md\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // [theme.breakpoints.up(\"xl\")]: {\r\n  //   width: \"200px\",\r\n  //   height: \"170px\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n}));\r\n\r\n//  sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", ...CustomImage}}\r\n\r\nconst useStyles = makeStyles({\r\n  fileroot: {\r\n    border: \"2px solid #E0E0E0\",\r\n    borderRadius: \"5px\",\r\n    minHeight: \"300px\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\r\n      transitionDuration: \"0.3s\",\r\n    },\r\n    \"&:focus\": {\r\n      border: \"2px solid #28B294\",\r\n    },\r\n  },\r\n  item: {\r\n    textAlign: \"left !important\",\r\n  },\r\n  image: {\r\n    width: \"200px\",\r\n    height: \"150px\",\r\n  },\r\n});\r\n\r\nexport default function FileImageCard({ file }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const state = useTrackedStore();\r\n  const [profileImage, setProfileImage] = React.useState();\r\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const componentRef = React.useRef();\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  const getUserImage = async (file) => {\r\n    // let res = await axios({\r\n    //   method: \"get\",\r\n    //   headers: {\r\n    //     Accept: \"application/vnd.api+json\",\r\n    //     Authorization: state.token,\r\n    //   },\r\n    //   responseType: \"blob\",\r\n    //   url: `https://workdrive.zoho.com/api/v1/download/${file?.id}`,\r\n    // });\r\n    // setTheArray(oldArray => [...oldArray, newElement]);\r\n    // let reader = new window.FileReader();\r\n    // reader.readAsDataURL(res.data);\r\n    // reader.onload = function () {\r\n    //   let imageDataUrl = reader.result;\r\n    //   console.log(imageDataUrl);\r\n    //   setProfileImage(imageDataUrl);\r\n    //   setLoading(false);\r\n    // };\r\n\r\n    // , { type: \"application/pdf\" }\r\n    console.log(\r\n      \"file.attributes.thumbnail_url\",\r\n      file?.attributes.thumbnail_url\r\n    );\r\n\r\n    let res = await ApiCall.getImageResponse(state?.token, file);\r\n\r\n    console.log({ res, id: file?.id });\r\n    var file = new Blob([res.data]);\r\n    var fileURL = URL.createObjectURL(file);\r\n    console.log(\"fileURL\", fileURL);\r\n    setProfileImage(fileURL);\r\n    setLoading(false);\r\n    // window.open(fileURL);\r\n  };\r\n\r\n  React.useEffect(async () => {\r\n    // console.log({\r\n    //   url: `https://previewengine-accl.zoho.com/thumbnail/WD/${file?.id}`,\r\n    // });\r\n    // let resData = await axios({\r\n    //   method: \"get\",\r\n    //   headers: {\r\n    //     Authorization: state.token,\r\n    //   },\r\n    //   responseType: \"blob\",\r\n    //   url: `https://previewengine-accl.zoho.com/thumbnail/WD/${file?.id}`,\r\n    // });\r\n    // console.log(file);\r\n    // console.log({ ThumbRes: resData });\r\n    let resData = await ApiCall.getThumbnailData(state?.token, file);\r\n    var blodData = new Blob([resData.data]);\r\n    var urlData = URL.createObjectURL(blodData);\r\n    // console.log({urlData: urlData});\r\n    // console.log(\"fileURL\", fileURL);\r\n    setThumbnailUrl(urlData);\r\n  }, [file?.attributes.thumbnail_url]);\r\n\r\n  // React.useEffect(() => {\r\n  //   getThumbNailImage(file)\r\n  // }, []);\r\n\r\n  const handleClickOpen = (file) => {\r\n    console.log({ file: file });\r\n    getUserImage(file);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(\"close dialog\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid\r\n        tabIndex=\"1\"\r\n        className={classes.fileroot}\r\n        onClick={() => handleClickOpen(file)}\r\n      >\r\n        {/* <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              {file.attributes.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div xs={12}>\r\n          {loading && <div>loading...</div>}\r\n          {!loading && <img width=\"1200\" alt=\"\" src={profileImage} />}\r\n        </div>\r\n      </Dialog> */}\r\n\r\n        {/* {thumbnailImage ? (\r\n          <CustomImage\r\n            src={thumbnailImage}\r\n            // className={classes.image}\r\n            alt={file?.attributes.name}\r\n          />\r\n        ) : (\r\n          // <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignContent: \"center\", ...CustomImage}}>\r\n          //   <CircularProgress />\r\n          // </Box>\r\n          <BoxThumb>\r\n            <DescriptionIcon sx={{width: 320, height: 240 }} />\r\n          </BoxThumb>\r\n        )} */}\r\n        <BoxThumb>\r\n          <DescriptionIcon sx={{width: 200, height: 230}}  />\r\n        </BoxThumb>\r\n        <br />\r\n        <Grid>\r\n          <Typography variant=\"h6\">{file?.attributes.name}</Typography>\r\n          <Typography variant=\"body1\">{file?.attributes.name}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ModalFile\r\n        open={open}\r\n        setOpen={setOpen}\r\n        profileImage={profileImage}\r\n        file={file}\r\n      />\r\n      <Grid>\r\n        {/* <Dialog\r\n          fullScreen\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar sx={{ position: \"relative\" }}>\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                {file.attributes.name}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Grid xs={12}>\r\n            {loading && (\r\n              <Box sx={{ display: \"flex\" }}>\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n\r\n            {!loading && (\r\n              <Grid>\r\n                <Grid>\r\n                  <img width=\"1200\" alt=\"\" src={profileImage} />\r\n                </Grid>\r\n              </Grid>\r\n            )}                      \r\n          </Grid>\r\n        </Dialog> */}\r\n      </Grid>\r\n    </Grid>\r\n    // <div xs={12}>\r\n    //   <Card\r\n    //     display={\"inline\"}\r\n    //     sx={{ maxWidth: 345 }}\r\n    //     onClick={() => handleClickOpen(file)}\r\n    //   >\r\n    //     <CardActionArea>\r\n    //       <CardMedia\r\n    //         component=\"img\"\r\n    //         height=\"100\"\r\n    //         image={thumbnailImage}\r\n    //         alt={file?.attributes.name}\r\n    //       />\r\n    //       <CardContent>\r\n    //         <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n    //           {file?.attributes.name}\r\n    //         </Typography>\r\n    //       </CardContent>\r\n    //     </CardActionArea>\r\n    //   </Card>\r\n    //   <Dialog\r\n    //     fullScreen\r\n    //     open={open}\r\n    //     onClose={handleClose}\r\n    //     TransitionComponent={Transition}\r\n    //   >\r\n    //     <AppBar sx={{ position: \"relative\" }}>\r\n    //\r\n    // </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}