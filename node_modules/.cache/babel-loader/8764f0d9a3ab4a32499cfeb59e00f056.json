{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\NameDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport SaveIcon from \"@mui/icons-material/Create\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Dialog, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport \"./coupon.css\";\nimport useTrackedStore from \"../../store/useTrackedStore\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameDialog(_ref) {\n  _s();\n\n  let {\n    open,\n    setOpen,\n    handleClose,\n    setPost,\n    post\n  } = _ref;\n  const state = useTrackedStore();\n  const {\n    handleSubmit,\n    control,\n    reset\n  } = useForm();\n\n  const onSubmit = async data => {\n    console.log(data, \"Create\");\n\n    try {\n      var _state$bread, _state$bread$slice, _state$bread$slice$;\n\n      const response = await ApiCall.createFolder(state === null || state === void 0 ? void 0 : state.token, state === null || state === void 0 ? void 0 : (_state$bread = state.bread) === null || _state$bread === void 0 ? void 0 : (_state$bread$slice = _state$bread.slice(-1)) === null || _state$bread$slice === void 0 ? void 0 : (_state$bread$slice$ = _state$bread$slice[0]) === null || _state$bread$slice$ === void 0 ? void 0 : _state$bread$slice$.id, {\n        name: data === null || data === void 0 ? void 0 : data.name\n      });\n      let myCustomArray = [response.data.data, ...post];\n      console.log({\n        myCustomArray\n      });\n      setPost(myCustomArray);\n      state.setApiData(state.bread.slice(-1)[0].id, myCustomArray);\n    } catch (error) {\n      alert(error);\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Create Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"name\",\n          control: control,\n          defaultValue: \"\",\n          rules: {\n            required: true\n          },\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"Type\",\n              variant: \"standard\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              marginTop: \"10px\"\n            },\n            type: \"submit\",\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 24\n            }, this),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameDialog, \"pcN2hp0cYmImO7Z3mhlbsWfd0GI=\", false, function () {\n  return [useTrackedStore, useForm];\n});\n\n_c = NameDialog;\nexport default NameDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameDialog\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/NameDialog.js"],"names":["React","useState","axios","Button","SaveIcon","useForm","Controller","Dialog","DialogContent","DialogTitle","TextField","useTrackedStore","ApiCall","NameDialog","open","setOpen","handleClose","setPost","post","state","handleSubmit","control","reset","onSubmit","data","console","log","response","createFolder","token","bread","slice","id","name","myCustomArray","setApiData","error","alert","required","field","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SaveIcon from \"@mui/icons-material/Create\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport \"./coupon.css\";\r\nimport useTrackedStore from \"../../store/useTrackedStore\";\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nfunction NameDialog({ open, setOpen, handleClose, setPost, post }) {\r\n  const state = useTrackedStore();\r\n  const { handleSubmit, control, reset } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data, \"Create\");\r\n    try {\r\n      const response = await ApiCall.createFolder(state?.token,state?.bread?.slice(-1)?.[0]?.id, {\r\n        name: data?.name,\r\n      });\r\n\r\n      let myCustomArray = [response.data.data, ...post];\r\n      console.log({myCustomArray});\r\n      setPost(myCustomArray);\r\n      state.setApiData(state.bread.slice(-1)[0].id, myCustomArray);\r\n    } catch (error) {\r\n      alert(error)\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle>Create Folder</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: true }}\r\n            render={({ field }) => (\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Type\"\r\n                variant=\"standard\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <div>\r\n            <Button\r\n              sx={{ marginTop: \"10px\" }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              endIcon={<SaveIcon />}\r\n            >\r\n              Create\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default NameDialog;\r\n"]},"metadata":{},"sourceType":"module"}