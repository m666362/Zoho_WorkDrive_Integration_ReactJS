{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\WorkDrive\\\\DisplayPdf.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport \"./Response\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport \"./project_folder.css\";\nimport ModalPdf from \"./ModalPdf\";\nimport useTrackedStore from \"../../store/useTrackedStore\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst CustomImage = styled(\"img\")(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    minHeight: \"210px\",\n    minWidth: \"100%\"\n  };\n});\nconst useStyles = makeStyles({\n  fileroot: {\n    border: \"2px solid #E0E0E0\",\n    borderRadius: \"5px\",\n    minHeight: \"300px\",\n    \"&:hover\": {\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\n      transitionDuration: \"0.3s\"\n    },\n    \"&:focus\": {\n      border: \"2px solid #28B294\"\n    }\n  },\n  item: {\n    textAlign: \"left !important\"\n  },\n  details: {\n    padding: \"0 10px\"\n  },\n  image: {\n    width: \"200px\",\n    height: \"170px\"\n  }\n});\nconst BoxThumb = styled(\"Box\")(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    minHeight: \"100%\",\n    minWidth: \"100%\"\n  };\n});\nexport default function ActionAreaCard(_ref3) {\n  _s();\n\n  let {\n    file\n  } = _ref3;\n  const [open, setOpen] = React.useState(false);\n  const state = useTrackedStore();\n  const classes = useStyles();\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\n\n  function onDocumentLoadSuccess(_ref4) {\n    let {\n      numPages\n    } = _ref4;\n    setNumPages(numPages);\n  }\n\n  const [profileImage, setProfileImage] = React.useState();\n  const componentRef = React.useRef();\n  React.useEffect(async () => {\n    let resData = await ApiCall.getThumbnailData(state === null || state === void 0 ? void 0 : state.token, file);\n    var blodData = new Blob([resData.data]);\n    var urlData = URL.createObjectURL(blodData);\n    setThumbnailUrl(urlData);\n  }, [file === null || file === void 0 ? void 0 : file.attributes.thumbnail_url]);\n\n  const getUserImage = async file => {\n    let res = await ApiCall.getImageResponse(state === null || state === void 0 ? void 0 : state.token, file);\n    console.log({\n      reDDds: res\n    });\n    var blobFile = new Blob([res.data], {\n      type: \"application/pdf\"\n    });\n    var fileURL = URL.createObjectURL(blobFile);\n    console.log(\"fileURL\", fileURL);\n    state.setLoading(false);\n    setOpen(true);\n    setProfileImage(fileURL); // window.open(fileURL);\n  };\n\n  React.useEffect(() => {\n    setThumbnailUrl();\n  }, []);\n\n  const handleClickOpen = file => {\n    state.setLoading(true);\n    getUserImage(file);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      tabIndex: \"1\",\n      className: classes.fileroot,\n      onClick: () => handleClickOpen(file),\n      children: [thumbnailImage ? /*#__PURE__*/_jsxDEV(CustomImage, {\n        src: thumbnailImage // lt={file?.attributes.name}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BoxThumb, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.details,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: (file === null || file === void 0 ? void 0 : file.attributes.name.length) < 12 ? file === null || file === void 0 ? void 0 : file.attributes.name : `${file === null || file === void 0 ? void 0 : file.attributes.name.substr(0, 12)}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalPdf, {\n      profileImage: profileImage,\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActionAreaCard, \"uPba5nZ7EwjtUgKSL6nA4YgAQvQ=\", false, function () {\n  return [useTrackedStore, useStyles];\n});\n\n_c3 = ActionAreaCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"ActionAreaCard\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/WorkDrive/DisplayPdf.js"],"names":["React","Grid","Typography","Slide","useReactToPrint","experimentalStyled","styled","makeStyles","ApiCall","ModalPdf","useTrackedStore","CircularProgress","Transition","forwardRef","props","ref","CustomImage","theme","minHeight","minWidth","useStyles","fileroot","border","borderRadius","boxShadow","transitionDuration","item","textAlign","details","padding","image","width","height","BoxThumb","ActionAreaCard","file","open","setOpen","useState","state","classes","thumbnailImage","setThumbnailUrl","onDocumentLoadSuccess","numPages","setNumPages","profileImage","setProfileImage","componentRef","useRef","useEffect","resData","getThumbnailData","token","blodData","Blob","data","urlData","URL","createObjectURL","attributes","thumbnail_url","getUserImage","res","getImageResponse","console","log","reDDds","blobFile","type","fileURL","setLoading","handleClickOpen","handleClose","name","length","substr"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {} from \"./Response\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport \"./project_folder.css\";\r\nimport ModalPdf from \"./ModalPdf\";\r\nimport useTrackedStore from \"../../store/useTrackedStore\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CustomImage = styled(\"img\")(({ theme }) => ({\r\n  \r\n  minHeight: \"210px\",\r\n  minWidth: \"100%\",\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n  fileroot: {\r\n    border: \"2px solid #E0E0E0\",\r\n    borderRadius: \"5px\",\r\n    minHeight: \"300px\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 1px 1px #E0E0E0\",\r\n      transitionDuration: \"0.3s\",\r\n    },\r\n    \"&:focus\": {\r\n      border: \"2px solid #28B294\",\r\n    },\r\n  },\r\n  item: {\r\n    textAlign: \"left !important\",\r\n  },\r\n  details: {\r\n    padding: \"0 10px\",\r\n  },\r\n  image: {\r\n    width: \"200px\",\r\n    height: \"170px\",\r\n  },\r\n});\r\n\r\nconst BoxThumb = styled(\"Box\")(({ theme }) => ({\r\n  \r\n  minHeight: \"100%\",\r\n  minWidth: \"100%\",\r\n}));\r\n\r\nexport default function ActionAreaCard({ file }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const state = useTrackedStore();\r\n  const classes = useStyles();\r\n  const [thumbnailImage, setThumbnailUrl] = React.useState();\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  const [profileImage, setProfileImage] = React.useState();\r\n  const componentRef = React.useRef();\r\n\r\n  React.useEffect(async () => {\r\n    let resData = await ApiCall.getThumbnailData(state?.token, file);\r\n    var blodData = new Blob([resData.data]);\r\n    var urlData = URL.createObjectURL(blodData);\r\n    setThumbnailUrl(urlData);\r\n  }, [file?.attributes.thumbnail_url]);\r\n\r\n\r\n  const getUserImage = async (file) => {\r\n    let res = await ApiCall.getImageResponse(state?.token, file);\r\n    console.log({ reDDds: res });\r\n    var blobFile = new Blob([res.data], { type: \"application/pdf\" });\r\n    var fileURL = URL.createObjectURL(blobFile);\r\n    console.log(\"fileURL\", fileURL);\r\n    state.setLoading(false);\r\n    setOpen(true);\r\n    setProfileImage(fileURL);\r\n    // window.open(fileURL);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setThumbnailUrl();\r\n  }, []);\r\n\r\n  const handleClickOpen = (file) => {\r\n    state.setLoading(true);\r\n    getUserImage(file);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        container\r\n        tabIndex=\"1\"\r\n        className={classes.fileroot}\r\n        onClick={() => handleClickOpen(file)}\r\n      >\r\n        {thumbnailImage ? (\r\n          <CustomImage src={thumbnailImage} \r\n          // lt={file?.attributes.name}\r\n           />\r\n        ) : (\r\n          <BoxThumb>\r\n            <CircularProgress />\r\n          </BoxThumb>\r\n        )}\r\n        <br />\r\n        <Grid className={classes.details}>\r\n          <Typography variant=\"h6\">{file?.attributes.name.length<12?file?.attributes.name:`${file?.attributes.name.substr(0, 12)}...`}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ModalPdf profileImage={profileImage} open={open} setOpen={setOpen} />\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}