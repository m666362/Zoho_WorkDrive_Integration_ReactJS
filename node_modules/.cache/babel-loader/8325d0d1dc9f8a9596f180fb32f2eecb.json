{"ast":null,"code":"import { createContext as e, useRef as r, createElement as t, useContext as n, useReducer as o, useEffect as c, useLayoutEffect as u } from \"react\";\nimport { unstable_runWithPriority as s, unstable_NormalPriority as i } from \"scheduler\";\nimport { unstable_batchedUpdates as d } from \"react-dom\";\n\nconst p = Symbol(),\n      a = Symbol(),\n      f = \"undefined\" == typeof window || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent) ? c : u,\n      l = s ? e => s(i, e) : e => e(),\n      v = e => e;\n\nfunction w(n) {\n  const o = e({\n    [p]: {\n      v: {\n        current: n\n      },\n      n: {\n        current: -1\n      },\n      l: new Set(),\n      u: e => e()\n    }\n  });\n  var c;\n  return o[a] = o.Provider, o.Provider = (c = o.Provider, _ref => {\n    let {\n      value: e,\n      children: n\n    } = _ref;\n    const o = r(e),\n          u = r(0),\n          s = r();\n\n    if (!s.current) {\n      const e = new Set(),\n            r = r => {\n        d(() => {\n          u.current += 1, e.forEach(e => e([u.current])), r();\n        });\n      };\n\n      s.current = {\n        [p]: {\n          v: o,\n          n: u,\n          l: e,\n          u: r\n        }\n      };\n    }\n\n    return f(() => {\n      o.current = e, u.current += 1, l(() => {\n        s.current[p].l.forEach(r => {\n          r([u.current, e]);\n        });\n      });\n    }, [e]), t(c, {\n      value: s.current\n    }, n);\n  }), delete o.Consumer, o;\n}\n\nfunction E(e, r) {\n  const t = n(e)[p];\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !t) throw new Error(\"useContextSelector requires special context\");\n  const {\n    v: {\n      current: c\n    },\n    n: {\n      current: u\n    },\n    l: s\n  } = t,\n        i = r(c),\n        [d, a] = o((e, t) => {\n    if (!t) return [c, i];\n    if (t[0] === u) return Object.is(e[1], i) ? e : [c, i];\n\n    try {\n      if (2 === t.length) {\n        if (Object.is(e[0], t[1])) return e;\n        const n = r(t[1]);\n        return Object.is(e[1], n) ? e : [t[1], n];\n      }\n    } catch (e) {}\n\n    return [...e];\n  }, [c, i]);\n  return Object.is(d[1], i) || a(), f(() => (s.add(a), () => {\n    s.delete(a);\n  }), [s]), d[1];\n}\n\nfunction h(e) {\n  return E(e, v);\n}\n\nfunction b(e) {\n  const r = n(e)[p];\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !r) throw new Error(\"useContextUpdate requires special context\");\n  const {\n    u: t\n  } = r;\n  return t;\n}\n\nconst m = _ref2 => {\n  let {\n    context: e,\n    value: r,\n    children: n\n  } = _ref2;\n  const {\n    [a]: o\n  } = e;\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !o) throw new Error(\"BridgeProvider requires special context\");\n  return t(o, {\n    value: r\n  }, n);\n},\n      x = e => {\n  const r = n(e);\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !r[p]) throw new Error(\"useBridgeValue requires special context\");\n  return r;\n};\n\nexport { m as BridgeProvider, w as createContext, x as useBridgeValue, h as useContext, E as useContextSelector, b as useContextUpdate };","map":{"version":3,"sources":["../src/index.ts"],"names":["CONTEXT_VALUE","Symbol","ORIGINAL_PROVIDER","window","test","navigator","userAgent","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","runWithNormalPriority","runWithPriority","thunk","NormalPriority","ProviderOrig","value","children","valueRef","useRef","versionRef","contextValue","current","listeners","Set","update","batchedUpdates","forEach","listener","v","n","l","u","createElement","identity","x","createContext","defaultValue","context","createContextOrig","f","Provider","Consumer","useContextSelector","selector","useContextOrig","process","env","NODE_ENV","Error","version","selected","state","dispatch","useReducer","prev","next","Object","is","length","nextSelected","e","add","delete","useContext","useContextUpdate","BridgeProvider","useBridgeValue","bridgeValue"],"mappings":"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","sourcesContent":["import {\n  ComponentType,\n  Context as ContextOrig,\n  FC,\n  MutableRefObject,\n  Provider,\n  createElement,\n  createContext as createContextOrig,\n  useContext as useContextOrig,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  unstable_NormalPriority as NormalPriority,\n  unstable_runWithPriority as runWithPriority,\n} from 'scheduler';\n\nimport { batchedUpdates } from './batchedUpdates';\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\n\nconst isSSR = typeof window === 'undefined'\n  || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\n\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = runWithPriority\n  ? (thunk: () => void) => runWithPriority(NormalPriority, thunk)\n  : (thunk: () => void) => thunk();\n\ntype Version = number;\n\ntype ContextValue<Value> = {\n  [CONTEXT_VALUE]: {\n    /* \"v\"alue     */ v: MutableRefObject<Value>;\n    /* versio\"n\"   */ n: MutableRefObject<Version>;\n    /* \"l\"isteners */ l: Set<(action: readonly [Version] | readonly [Version, Value]) => void>;\n    /* \"u\"pdate    */ u: (thunk: () => void) => void;\n  };\n};\n\nexport interface Context<Value> {\n  Provider: ComponentType<{ value: Value }>;\n  displayName?: string;\n}\n\nconst createProvider = <Value>(\n  ProviderOrig: Provider<ContextValue<Value>>,\n): FC<{ value: Value }> => ({ value, children }) => {\n    const valueRef = useRef(value);\n    const versionRef = useRef(0);\n    const contextValue = useRef<ContextValue<Value>>();\n    if (!contextValue.current) {\n      const listeners = new Set<(action: readonly [Version] | readonly [Version, Value]) => void>();\n      const update = (thunk: () => void) => {\n        batchedUpdates(() => {\n          versionRef.current += 1;\n          listeners.forEach((listener) => listener([versionRef.current]));\n          thunk();\n        });\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */ v: valueRef,\n          /* versio\"n\"   */ n: versionRef,\n          /* \"l\"isteners */ l: listeners,\n          /* \"u\"pdate    */ u: update,\n        },\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithNormalPriority(() => {\n        (contextValue.current as ContextValue<Value>)[CONTEXT_VALUE].l.forEach((listener) => {\n          listener([versionRef.current, value]);\n        });\n      });\n    }, [value]);\n    return createElement(ProviderOrig, { value: contextValue.current }, children);\n  };\n\nconst identity = <T>(x: T) => x;\n\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext<Value>(defaultValue: Value) {\n  const context = createContextOrig<ContextValue<Value>>({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */ v: { current: defaultValue },\n      /* versio\"n\"   */ n: { current: -1 },\n      /* \"l\"isteners */ l: new Set(),\n      /* \"u\"pdate    */ u: (f) => f(),\n    },\n  });\n  (context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<ContextValue<Value>>;\n  })[ORIGINAL_PROVIDER] = context.Provider;\n  (context as unknown as Context<Value>).Provider = createProvider(context.Provider);\n  delete (context as any).Consumer; // no support for Consumer\n  return context as unknown as Context<Value>;\n}\n\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nexport function useContextSelector<Value, Selected>(\n  context: Context<Value>,\n  selector: (value: Value) => Selected,\n) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */ v: { current: value },\n    /* versio\"n\"   */ n: { current: version },\n    /* \"l\"isteners */ l: listeners,\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = useReducer((\n    prev: readonly [Value, Selected],\n    next?: // undefined from render below\n      | readonly [Version] // from useContextUpdate\n      | readonly [Version, Value], // from provider effect\n  ) => {\n    if (!next) {\n      return [value, selected] as const;\n    }\n    if (next[0] === version) {\n      if (Object.is(prev[1], selected)) {\n        return prev; // bail out\n      }\n      return [value, selected] as const;\n    }\n    try {\n      if (next.length === 2) {\n        if (Object.is(prev[0], next[1])) {\n          return prev; // do not update\n        }\n        const nextSelected = selector(next[1]);\n        if (Object.is(prev[1], nextSelected)) {\n          return prev; // do not update\n        }\n        return [next[1], nextSelected] as const;\n      }\n    } catch (e) {\n      // ignored (stale props or some other reason)\n    }\n    return [...prev] as const; // schedule update\n  }, [value, selected] as const);\n  if (!Object.is(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch();\n  }\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state[1];\n}\n\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext<Value>(context: Context<Value>) {\n  return useContextSelector(context, identity);\n}\n\n/**\n * This hook returns an update function that accepts a thunk function\n *\n * Use this for a function that will change a value in\n * [Concurrent Mode](https://reactjs.org/docs/concurrent-mode-intro.html).\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n * update(() => setState(...));\n */\nexport function useContextUpdate<Value>(context: Context<Value>) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const { u: update } = contextValue;\n  return update;\n}\n\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider: FC<{\n  context: Context<any>;\n  value: any;\n}> = ({ context, value, children }) => {\n  const { [ORIGINAL_PROVIDER]: ProviderOrig } = context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<unknown>;\n  };\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return createElement(ProviderOrig, { value }, children);\n};\n\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = (context: Context<any>) => {\n  const bridgeValue = useContextOrig(context as unknown as ContextOrig<ContextValue<unknown>>);\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue as any;\n};\n"]},"metadata":{},"sourceType":"module"}