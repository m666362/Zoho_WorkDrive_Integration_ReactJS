{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { BuildTheme } from \"./assets/global/Theme-variable\";\nimport Response from \"./components/Playground/Response\";\nimport \"./App.css\";\nimport { makeStyles } from \"@mui/styles\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport useTrackedStore from \"./store/useTrackedStore\";\nimport CryptoJS from \"crypto-js\";\nimport * as ApiCall from \"./components/Playground/api/ApiCalling\";\nimport axios from \"axios\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TabPanel from \"./components/Playground/TabPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZOHO = window.ZOHO;\nconst useStyles = makeStyles({\n  grid: {\n    border: \"1px solid black\"\n  },\n  icon: {\n    fontSize: \"30px !important\"\n  }\n});\n\nfunction converConncectionMap(connMap) {\n  return {\n    clientId: connMap === null || connMap === void 0 ? void 0 : connMap.client_id,\n    clientSecret: connMap === null || connMap === void 0 ? void 0 : connMap.client_secret,\n    authUrl: connMap === null || connMap === void 0 ? void 0 : connMap.auth_url,\n    refreshUrl: connMap === null || connMap === void 0 ? void 0 : connMap.refresh_url,\n    refreshToken: connMap === null || connMap === void 0 ? void 0 : connMap.refresh_token,\n    token_type: connMap === null || connMap === void 0 ? void 0 : connMap.token_type,\n    connName: connMap === null || connMap === void 0 ? void 0 : connMap.conn_name,\n    orgId: connMap === null || connMap === void 0 ? void 0 : connMap.org_id,\n    apiKey: connMap === null || connMap === void 0 ? void 0 : connMap.api_key\n  };\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst App = () => {\n  _s();\n\n  var _stateSettings$map, _stateSettings$map2;\n\n  const classes = useStyles();\n  const state = useTrackedStore();\n  const [entity, setEntity] = useState(\"\");\n  const [entityId, setEntityId] = useState(\"\");\n  const [zohoLoaded, setZohoLoaded] = useState(false);\n  const [rootFolderId, setRootFolderId] = useState(null);\n  const [userAccessToken, setUserAccessToken] = useState(null);\n  const [value, setValue] = React.useState(0);\n  const [stateSettings, setStateSettings] = useState([]);\n  const [decryptData, setDecryptData] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    /*\r\n     * Subscribe to the EmbeddedApp onPageLoad event before initializing\r\n     */\n    ZOHO.embeddedApp.on(\"PageLoad\", function (data) {\n      console.log(\"Module Data \", data);\n      setEntity(data === null || data === void 0 ? void 0 : data.Entity);\n      setEntityId(data === null || data === void 0 ? void 0 : data.EntityId);\n      setZohoLoaded(true); //Custom Bussiness logic goes here\n    });\n    /*\r\n     * initializing the widget.\r\n     */\n\n    ZOHO.embeddedApp.init();\n  }, []);\n  useEffect(async () => {\n    if (zohoLoaded && entity !== \"\" && entityId !== \"\") {\n      const settings = await ZOHO.CRM.API.searchRecord({\n        Entity: \"zworkflows__ZWorkFlow_Settings\",\n        Type: \"criteria\",\n        Query: \"(((zworkflows__Service_Type:equals:'ZOHO Workdrive') and (zworkflows__Settings_Type:equals:Addon)) and (zworkflows__Module_Name:equals:\" + entity + \" ))\"\n      });\n      console.log(\"settings\", settings === null || settings === void 0 ? void 0 : settings.data);\n      setDecryptData(settings === null || settings === void 0 ? void 0 : settings.data); // console.table(settings?.data);\n      // setUserDriveData(settings?.data);\n      // const myXData = await setUserDriveData(settings?.data);\n      // console.log({ myXData });\n      // // console.table({names: console.table(names)})\n      // const setting1 = settings?.data?.[2];\n      // const encSchema = setting1?.zworkflows__Setting_Schema_Frontend;\n      // console.log({ encSchema }, entityId);\n      // const bytes = CryptoJS.AES.decrypt(encSchema, setting1?.id);\n      // console.log({ bytes });\n      // var originalText = bytes.toString(CryptoJS.enc.Utf8);\n      // const settingSchema = JSON.parse(originalText);\n      // console.log({\n      //   settingSchema:\n      //     settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name,\n      // });\n      // const connSchemaStr = CryptoJS.AES.decrypt(\n      //   settingSchema?.conn_name?.zworkflows__Connection_Settings_Frontend,\n      //   settingSchema?.conn_name?.id\n      // ).toString(CryptoJS.enc.Utf8);\n      // console.log(JSON.parse(connSchemaStr));\n      // const connMap = JSON.parse(connSchemaStr);\n      // console.log({ connMap });\n      // const accessokenUrl =\n      //   \"https://instafunctions-695631012.development.catalystserverless.com/server/v1/auth/tokens/accesstoken\";\n      // const accessTokenMap = await axios.post(\n      //   accessokenUrl,\n      //   converConncectionMap(connMap)\n      // );\n      // console.log({ accessTokenMap: accessTokenMap?.data?.data?.token });\n      // const userToken = accessTokenMap?.data?.data?.token;\n      // setUserAccessToken(accessTokenMap?.data?.data?.token);\n      // state.setToken(accessTokenMap?.data?.data?.token);\n      // state.setUserToken(userToken);\n      // const contactMap = await ZOHO.CRM.API.getRecord({\n      //   Entity: entity,\n      //   RecordID: entityId,\n      // }).then(function (data) {\n      //   setRootFolderId(\n      //     data?.data?.[0]?.[\n      //       settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\n      //     ]\n      //   );\n      //   console.log({\n      //     data: data?.data?.[0]?.[\n      //       settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\n      //     ],\n      //   });\n      //   console.log({ bread: state.bread });\n      // });\n    }\n  }, [zohoLoaded, entity, entityId]);\n  useEffect(async () => {\n    let myXData = [];\n\n    if (decryptData != []) {\n      for (let i = 0; i < decryptData.length; i++) {\n        var _settingSchema$zoho_w, _settingSchema$conn_n, _settingSchema$conn_n2, _accessTokenMap$data, _accessTokenMap$data$, _accessTokenMap$data2, _accessTokenMap$data3, _accessTokenMap$data4, _accessTokenMap$data5, _accessTokenMap$data6, _accessTokenMap$data7, _contactMap$data, _contactMap$data$, _settingSchema$zoho_w2, _accessTokenMap$data8, _accessTokenMap$data9, _contactMap$data2, _contactMap$data2$, _settingSchema$zoho_w3, _accessTokenMap$data10, _accessTokenMap$data11;\n\n        const setting1 = decryptData === null || decryptData === void 0 ? void 0 : decryptData[i];\n        console.log({\n          setting1\n        });\n        const encSchema = setting1 === null || setting1 === void 0 ? void 0 : setting1.zworkflows__Setting_Schema_Frontend;\n        console.log({\n          encSchema\n        }, entityId);\n        const bytes = CryptoJS.AES.decrypt(encSchema, setting1 === null || setting1 === void 0 ? void 0 : setting1.id);\n        console.log({\n          bytes\n        });\n        var originalText = bytes.toString(CryptoJS.enc.Utf8);\n        const settingSchema = JSON.parse(originalText);\n        console.log({\n          settingSchema: settingSchema === null || settingSchema === void 0 ? void 0 : (_settingSchema$zoho_w = settingSchema.zoho_workdrive__crm_field_for_folder_id) === null || _settingSchema$zoho_w === void 0 ? void 0 : _settingSchema$zoho_w.api_name\n        });\n        const connSchemaStr = CryptoJS.AES.decrypt(settingSchema === null || settingSchema === void 0 ? void 0 : (_settingSchema$conn_n = settingSchema.conn_name) === null || _settingSchema$conn_n === void 0 ? void 0 : _settingSchema$conn_n.zworkflows__Connection_Settings_Frontend, settingSchema === null || settingSchema === void 0 ? void 0 : (_settingSchema$conn_n2 = settingSchema.conn_name) === null || _settingSchema$conn_n2 === void 0 ? void 0 : _settingSchema$conn_n2.id).toString(CryptoJS.enc.Utf8);\n        console.log(JSON.parse(connSchemaStr));\n        const connMap = JSON.parse(connSchemaStr);\n        console.log({\n          connMap\n        });\n        const accessokenUrl = \"https://instafunctions-695631012.development.catalystserverless.com/server/v1/auth/tokens/accesstoken\";\n        const accessTokenMap = await axios.post(accessokenUrl, converConncectionMap(connMap));\n        console.log({\n          accessTokenMap: accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data = accessTokenMap.data) === null || _accessTokenMap$data === void 0 ? void 0 : (_accessTokenMap$data$ = _accessTokenMap$data.data) === null || _accessTokenMap$data$ === void 0 ? void 0 : _accessTokenMap$data$.token\n        });\n        const userToken = accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data2 = accessTokenMap.data) === null || _accessTokenMap$data2 === void 0 ? void 0 : (_accessTokenMap$data3 = _accessTokenMap$data2.data) === null || _accessTokenMap$data3 === void 0 ? void 0 : _accessTokenMap$data3.token;\n        setUserAccessToken(accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data4 = accessTokenMap.data) === null || _accessTokenMap$data4 === void 0 ? void 0 : (_accessTokenMap$data5 = _accessTokenMap$data4.data) === null || _accessTokenMap$data5 === void 0 ? void 0 : _accessTokenMap$data5.token);\n        state.setToken(accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data6 = accessTokenMap.data) === null || _accessTokenMap$data6 === void 0 ? void 0 : (_accessTokenMap$data7 = _accessTokenMap$data6.data) === null || _accessTokenMap$data7 === void 0 ? void 0 : _accessTokenMap$data7.token);\n        state.setUserToken(userToken);\n        const contactMap = await ZOHO.CRM.API.getRecord({\n          Entity: entity,\n          RecordID: entityId\n        });\n        myXData.push({\n          rootFolderId: contactMap === null || contactMap === void 0 ? void 0 : (_contactMap$data = contactMap.data) === null || _contactMap$data === void 0 ? void 0 : (_contactMap$data$ = _contactMap$data[0]) === null || _contactMap$data$ === void 0 ? void 0 : _contactMap$data$[settingSchema === null || settingSchema === void 0 ? void 0 : (_settingSchema$zoho_w2 = settingSchema.zoho_workdrive__crm_field_for_folder_id) === null || _settingSchema$zoho_w2 === void 0 ? void 0 : _settingSchema$zoho_w2.api_name],\n          Name: setting1 === null || setting1 === void 0 ? void 0 : setting1.Name,\n          userAccessToken: accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data8 = accessTokenMap.data) === null || _accessTokenMap$data8 === void 0 ? void 0 : (_accessTokenMap$data9 = _accessTokenMap$data8.data) === null || _accessTokenMap$data9 === void 0 ? void 0 : _accessTokenMap$data9.token\n        });\n        console.log({\n          rootFolderId: contactMap === null || contactMap === void 0 ? void 0 : (_contactMap$data2 = contactMap.data) === null || _contactMap$data2 === void 0 ? void 0 : (_contactMap$data2$ = _contactMap$data2[0]) === null || _contactMap$data2$ === void 0 ? void 0 : _contactMap$data2$[settingSchema === null || settingSchema === void 0 ? void 0 : (_settingSchema$zoho_w3 = settingSchema.zoho_workdrive__crm_field_for_folder_id) === null || _settingSchema$zoho_w3 === void 0 ? void 0 : _settingSchema$zoho_w3.api_name],\n          Name: setting1 === null || setting1 === void 0 ? void 0 : setting1.Name,\n          userAccessToken: accessTokenMap === null || accessTokenMap === void 0 ? void 0 : (_accessTokenMap$data10 = accessTokenMap.data) === null || _accessTokenMap$data10 === void 0 ? void 0 : (_accessTokenMap$data11 = _accessTokenMap$data10.data) === null || _accessTokenMap$data11 === void 0 ? void 0 : _accessTokenMap$data11.token\n        });\n      }\n    }\n\n    console.log({\n      myXData\n    });\n    setStateSettings(myXData);\n  }, [decryptData]); // React.useEffect(() => {\n  //   ApiCall.getAccessToken()\n  //     .then((res) => {\n  //       state.setToken(res.access_token);\n  //       state.setLoading(false);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // });\n\n  const customizer = {\n    direction: \"ltr\",\n    theme: \"PURPLE_THEME\",\n    activeMode: \"light\"\n  };\n  const theme = BuildTheme(customizer);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: \"divider\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"basic tabs example\",\n        children: (_stateSettings$map = stateSettings.map((setting, index) => {\n          var _setting$Name;\n\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            label: (_setting$Name = setting === null || setting === void 0 ? void 0 : setting.Name) !== null && _setting$Name !== void 0 ? _setting$Name : \"Some\",\n            ...a11yProps(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this);\n        })) !== null && _stateSettings$map !== void 0 ? _stateSettings$map : {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), (_stateSettings$map2 = stateSettings.map((setting, index) => {\n      return /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: index,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Response, {\n            rootFolderId: setting.rootFolderId,\n            userAccessToken: setting.userAccessToken,\n            name: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n            sx: {\n              color: \"#fff\",\n              zIndex: theme => theme.zIndex.drawer + 1\n            },\n            open: state.loading,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this);\n    })) !== null && _stateSettings$map2 !== void 0 ? _stateSettings$map2 : {}]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+ao+S4trmqluUPMVgcasCENZjuc=\", false, function () {\n  return [useStyles, useTrackedStore];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/App.js"],"names":["React","useEffect","useState","BuildTheme","Response","makeStyles","Backdrop","CircularProgress","useTrackedStore","CryptoJS","ApiCall","axios","Tabs","Tab","PropTypes","Typography","Box","TabPanel","ZOHO","window","useStyles","grid","border","icon","fontSize","converConncectionMap","connMap","clientId","client_id","clientSecret","client_secret","authUrl","auth_url","refreshUrl","refresh_url","refreshToken","refresh_token","token_type","connName","conn_name","orgId","org_id","apiKey","api_key","a11yProps","index","id","App","classes","state","entity","setEntity","entityId","setEntityId","zohoLoaded","setZohoLoaded","rootFolderId","setRootFolderId","userAccessToken","setUserAccessToken","value","setValue","stateSettings","setStateSettings","decryptData","setDecryptData","handleChange","event","newValue","embeddedApp","on","data","console","log","Entity","EntityId","init","settings","CRM","API","searchRecord","Type","Query","myXData","i","length","setting1","encSchema","zworkflows__Setting_Schema_Frontend","bytes","AES","decrypt","originalText","toString","enc","Utf8","settingSchema","JSON","parse","zoho_workdrive__crm_field_for_folder_id","api_name","connSchemaStr","zworkflows__Connection_Settings_Frontend","accessokenUrl","accessTokenMap","post","token","userToken","setToken","setUserToken","contactMap","getRecord","RecordID","push","Name","customizer","direction","theme","activeMode","width","borderBottom","borderColor","map","setting","color","zIndex","drawer","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,6CAAP;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;AAEA,MAAME,SAAS,GAAGf,UAAU,CAAC;AAC3BgB,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADqB;AAI3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAJqB,CAAD,CAA5B;;AASA,SAASC,oBAAT,CAA8BC,OAA9B,EAAuC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAED,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,SADd;AAELC,IAAAA,YAAY,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,aAFlB;AAGLC,IAAAA,OAAO,EAAEL,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,QAHb;AAILC,IAAAA,UAAU,EAAEP,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEQ,WAJhB;AAKLC,IAAAA,YAAY,EAAET,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,aALlB;AAMLC,IAAAA,UAAU,EAAEX,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEW,UANhB;AAOLC,IAAAA,QAAQ,EAAEZ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEa,SAPd;AAQLC,IAAAA,KAAK,EAAEd,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEe,MARX;AASLC,IAAAA,MAAM,EAAEhB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEiB;AATZ,GAAP;AAWD;;AAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO;AACLC,IAAAA,EAAE,EAAG,cAAaD,KAAM,EADnB;AAEL,qBAAkB,mBAAkBA,KAAM;AAFrC,GAAP;AAID;;AAED,MAAME,GAAG,GAAG,MAAM;AAAA;;AAAA;;AAChB,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AACA,QAAM6B,KAAK,GAAGzC,eAAe,EAA7B;AACA,QAAM,CAAC0C,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkD,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoD,UAAD,EAAaC,aAAb,IAA8BrD,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsD,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACwD,eAAD,EAAkBC,kBAAlB,IAAwCzD,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAAC0D,KAAD,EAAQC,QAAR,IAAoB7D,KAAK,CAACE,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAAC4D,aAAD,EAAgBC,gBAAhB,IAAoC7D,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC8D,WAAD,EAAcC,cAAd,IAAgC/D,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMgE,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCP,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,GAFD;;AAIAnE,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AAEIiB,IAAAA,IAAI,CAACmD,WAAL,CAAiBC,EAAjB,CAAoB,UAApB,EAAgC,UAAUC,IAAV,EAAgB;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACApB,MAAAA,SAAS,CAACoB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,MAAP,CAAT;AACArB,MAAAA,WAAW,CAACkB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,QAAP,CAAX;AACApB,MAAAA,aAAa,CAAC,IAAD,CAAb,CAJ8C,CAK9C;AACD,KAND;AAQA;AACJ;AACA;;AACIrC,IAAAA,IAAI,CAACmD,WAAL,CAAiBO,IAAjB;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA3E,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIqD,UAAU,IAAIJ,MAAM,KAAK,EAAzB,IAA+BE,QAAQ,KAAK,EAAhD,EAAoD;AAClD,YAAMyB,QAAQ,GAAG,MAAM3D,IAAI,CAAC4D,GAAL,CAASC,GAAT,CAAaC,YAAb,CAA0B;AAC/CN,QAAAA,MAAM,EAAE,gCADuC;AAE/CO,QAAAA,IAAI,EAAE,UAFyC;AAG/CC,QAAAA,KAAK,EACH,4IACAhC,MADA,GAEA;AAN6C,OAA1B,CAAvB;AAQAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB,aAAwBA,QAAxB,uBAAwBA,QAAQ,CAAEN,IAAlC;AACAN,MAAAA,cAAc,CAACY,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEN,IAAX,CAAd,CAVkD,CAYlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAjEQ,EAiEN,CAACjB,UAAD,EAAaJ,MAAb,EAAqBE,QAArB,CAjEM,CAAT;AAmEAnD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIkF,OAAO,GAAG,EAAd;;AACA,QAAInB,WAAW,IAAI,EAAnB,EAAuB;AACrB,WAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,WAAW,CAACqB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAAA;;AAC3C,cAAME,QAAQ,GAAGtB,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAGoB,CAAH,CAA5B;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEa,UAAAA;AAAF,SAAZ;AACA,cAAMC,SAAS,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,mCAA5B;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEc,UAAAA;AAAF,SAAZ,EAA2BnC,QAA3B;AACA,cAAMqC,KAAK,GAAGhF,QAAQ,CAACiF,GAAT,CAAaC,OAAb,CAAqBJ,SAArB,EAAgCD,QAAhC,aAAgCA,QAAhC,uBAAgCA,QAAQ,CAAExC,EAA1C,CAAd;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEgB,UAAAA;AAAF,SAAZ;AACA,YAAIG,YAAY,GAAGH,KAAK,CAACI,QAAN,CAAepF,QAAQ,CAACqF,GAAT,CAAaC,IAA5B,CAAnB;AACA,cAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWN,YAAX,CAAtB;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAY;AACVuB,UAAAA,aAAa,EACXA,aADW,aACXA,aADW,gDACXA,aAAa,CAAEG,uCADJ,0DACX,sBAAwDC;AAFhD,SAAZ;AAIA,cAAMC,aAAa,GAAG5F,QAAQ,CAACiF,GAAT,CAAaC,OAAb,CACpBK,aADoB,aACpBA,aADoB,gDACpBA,aAAa,CAAEzD,SADK,0DACpB,sBAA0B+D,wCADN,EAEpBN,aAFoB,aAEpBA,aAFoB,iDAEpBA,aAAa,CAAEzD,SAFK,2DAEpB,uBAA0BO,EAFN,EAGpB+C,QAHoB,CAGXpF,QAAQ,CAACqF,GAAT,CAAaC,IAHF,CAAtB;AAIAvB,QAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAI,CAACC,KAAL,CAAWG,aAAX,CAAZ;AACA,cAAM3E,OAAO,GAAGuE,IAAI,CAACC,KAAL,CAAWG,aAAX,CAAhB;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAE/C,UAAAA;AAAF,SAAZ;AACA,cAAM6E,aAAa,GACjB,uGADF;AAGA,cAAMC,cAAc,GAAG,MAAM7F,KAAK,CAAC8F,IAAN,CAC3BF,aAD2B,EAE3B9E,oBAAoB,CAACC,OAAD,CAFO,CAA7B;AAIA8C,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAE+B,UAAAA,cAAc,EAAEA,cAAF,aAAEA,cAAF,+CAAEA,cAAc,CAAEjC,IAAlB,kFAAE,qBAAsBA,IAAxB,0DAAE,sBAA4BmC;AAA9C,SAAZ;AACA,cAAMC,SAAS,GAAGH,cAAH,aAAGA,cAAH,gDAAGA,cAAc,CAAEjC,IAAnB,mFAAG,sBAAsBA,IAAzB,0DAAG,sBAA4BmC,KAA9C;AACA/C,QAAAA,kBAAkB,CAAC6C,cAAD,aAACA,cAAD,gDAACA,cAAc,CAAEjC,IAAjB,mFAAC,sBAAsBA,IAAvB,0DAAC,sBAA4BmC,KAA7B,CAAlB;AACAzD,QAAAA,KAAK,CAAC2D,QAAN,CAAeJ,cAAf,aAAeA,cAAf,gDAAeA,cAAc,CAAEjC,IAA/B,mFAAe,sBAAsBA,IAArC,0DAAe,sBAA4BmC,KAA3C;AACAzD,QAAAA,KAAK,CAAC4D,YAAN,CAAmBF,SAAnB;AACA,cAAMG,UAAU,GAAG,MAAM5F,IAAI,CAAC4D,GAAL,CAASC,GAAT,CAAagC,SAAb,CAAuB;AAC9CrC,UAAAA,MAAM,EAAExB,MADsC;AAE9C8D,UAAAA,QAAQ,EAAE5D;AAFoC,SAAvB,CAAzB;AAIA+B,QAAAA,OAAO,CAAC8B,IAAR,CAAa;AACXzD,UAAAA,YAAY,EACVsD,UADU,aACVA,UADU,2CACVA,UAAU,CAAEvC,IADF,0EACV,iBAAmB,CAAnB,CADU,sDACV,kBACEyB,aADF,aACEA,aADF,iDACEA,aAAa,CAAEG,uCADjB,2DACE,uBAAwDC,QAD1D,CAFS;AAKXc,UAAAA,IAAI,EAAE5B,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAE4B,IALL;AAMXxD,UAAAA,eAAe,EAAE8C,cAAF,aAAEA,cAAF,gDAAEA,cAAc,CAAEjC,IAAlB,mFAAE,sBAAsBA,IAAxB,0DAAE,sBAA4BmC;AANlC,SAAb;AAQAlC,QAAAA,OAAO,CAACC,GAAR,CAAY;AACVjB,UAAAA,YAAY,EACVsD,UADU,aACVA,UADU,4CACVA,UAAU,CAAEvC,IADF,4EACV,kBAAmB,CAAnB,CADU,uDACV,mBACEyB,aADF,aACEA,aADF,iDACEA,aAAa,CAAEG,uCADjB,2DACE,uBAAwDC,QAD1D,CAFQ;AAKVc,UAAAA,IAAI,EAAE5B,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAE4B,IALN;AAMVxD,UAAAA,eAAe,EAAE8C,cAAF,aAAEA,cAAF,iDAAEA,cAAc,CAAEjC,IAAlB,qFAAE,uBAAsBA,IAAxB,2DAAE,uBAA4BmC;AANnC,SAAZ;AAQD;AACF;;AAEDlC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEU,MAAAA;AAAF,KAAZ;AACApB,IAAAA,gBAAgB,CAACoB,OAAD,CAAhB;AACD,GA5DQ,EA4DN,CAACnB,WAAD,CA5DM,CAAT,CAtGgB,CAoKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMmD,UAAU,GAAG;AACjBC,IAAAA,SAAS,EAAE,KADM;AAEjBC,IAAAA,KAAK,EAAE,cAFU;AAGjBC,IAAAA,UAAU,EAAE;AAHK,GAAnB;AAKA,QAAMD,KAAK,GAAGlH,UAAU,CAACgH,UAAD,CAAxB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,YAAY,EAAE,CAAhB;AAAmBC,QAAAA,WAAW,EAAE;AAAhC,OAAT;AAAA,6BAEE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE7D,KADT;AAEE,QAAA,QAAQ,EAAEM,YAFZ;AAGE,sBAAW,oBAHb;AAAA,wCAKGJ,aAAa,CAAC4D,GAAd,CAAkB,CAACC,OAAD,EAAU9E,KAAV,KAAoB;AAAA;;AACrC,8BACE,QAAC,GAAD;AAAK,YAAA,KAAK,mBAAE8E,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAET,IAAX,yDAAmB,MAA7B;AAAA,eAAyCtE,SAAS,CAACC,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA,CALH,mEASQ;AATR;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,yBAeGiB,aAAa,CAAC4D,GAAd,CAAkB,CAACC,OAAD,EAAU9E,KAAV,KAAoB;AACrC,0BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEe,KAAjB;AAAwB,QAAA,KAAK,EAAEf,KAA/B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE,QAAC,QAAD;AACE,YAAA,YAAY,EAAE8E,OAAO,CAACnE,YADxB;AAEE,YAAA,eAAe,EAAEmE,OAAO,CAACjE,eAF3B;AAGE,YAAA,IAAI;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,QAAD;AACE,YAAA,EAAE,EAAE;AACFkE,cAAAA,KAAK,EAAE,MADL;AAEFC,cAAAA,MAAM,EAAGR,KAAD,IAAWA,KAAK,CAACQ,MAAN,CAAaC,MAAb,GAAsB;AAFvC,aADN;AAKE,YAAA,IAAI,EAAE7E,KAAK,CAAC8E,OALd;AAAA,mCAOE,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KArBA,CAfH,qEAoCQ,EApCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CAlPD;;GAAMhF,G;UACY3B,S,EACFZ,e;;;KAFVuC,G;AAoPN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { BuildTheme } from \"./assets/global/Theme-variable\";\r\nimport Response from \"./components/Playground/Response\";\r\nimport \"./App.css\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport useTrackedStore from \"./store/useTrackedStore\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport * as ApiCall from \"./components/Playground/api/ApiCalling\";\r\nimport axios from \"axios\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TabPanel from \"./components/Playground/TabPanel\";\r\n\r\nconst ZOHO = window.ZOHO;\r\n\r\nconst useStyles = makeStyles({\r\n  grid: {\r\n    border: \"1px solid black\",\r\n  },\r\n  icon: {\r\n    fontSize: \"30px !important\",\r\n  },\r\n});\r\n\r\nfunction converConncectionMap(connMap) {\r\n  return {\r\n    clientId: connMap?.client_id,\r\n    clientSecret: connMap?.client_secret,\r\n    authUrl: connMap?.auth_url,\r\n    refreshUrl: connMap?.refresh_url,\r\n    refreshToken: connMap?.refresh_token,\r\n    token_type: connMap?.token_type,\r\n    connName: connMap?.conn_name,\r\n    orgId: connMap?.org_id,\r\n    apiKey: connMap?.api_key,\r\n  };\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const state = useTrackedStore();\r\n  const [entity, setEntity] = useState(\"\");\r\n  const [entityId, setEntityId] = useState(\"\");\r\n  const [zohoLoaded, setZohoLoaded] = useState(false);\r\n  const [rootFolderId, setRootFolderId] = useState(null);\r\n  const [userAccessToken, setUserAccessToken] = useState(null);\r\n  const [value, setValue] = React.useState(0);\r\n  const [stateSettings, setStateSettings] = useState([]);\r\n  const [decryptData, setDecryptData] = useState([]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    /*\r\n     * Subscribe to the EmbeddedApp onPageLoad event before initializing\r\n     */\r\n\r\n    ZOHO.embeddedApp.on(\"PageLoad\", function (data) {\r\n      console.log(\"Module Data \", data);\r\n      setEntity(data?.Entity);\r\n      setEntityId(data?.EntityId);\r\n      setZohoLoaded(true);\r\n      //Custom Bussiness logic goes here\r\n    });\r\n\r\n    /*\r\n     * initializing the widget.\r\n     */\r\n    ZOHO.embeddedApp.init();\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    if (zohoLoaded && entity !== \"\" && entityId !== \"\") {\r\n      const settings = await ZOHO.CRM.API.searchRecord({\r\n        Entity: \"zworkflows__ZWorkFlow_Settings\",\r\n        Type: \"criteria\",\r\n        Query:\r\n          \"(((zworkflows__Service_Type:equals:'ZOHO Workdrive') and (zworkflows__Settings_Type:equals:Addon)) and (zworkflows__Module_Name:equals:\" +\r\n          entity +\r\n          \" ))\",\r\n      });\r\n      console.log(\"settings\", settings?.data);\r\n      setDecryptData(settings?.data);\r\n\r\n      // console.table(settings?.data);\r\n      // setUserDriveData(settings?.data);\r\n      // const myXData = await setUserDriveData(settings?.data);\r\n      // console.log({ myXData });\r\n      // // console.table({names: console.table(names)})\r\n      // const setting1 = settings?.data?.[2];\r\n      // const encSchema = setting1?.zworkflows__Setting_Schema_Frontend;\r\n      // console.log({ encSchema }, entityId);\r\n      // const bytes = CryptoJS.AES.decrypt(encSchema, setting1?.id);\r\n      // console.log({ bytes });\r\n      // var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n      // const settingSchema = JSON.parse(originalText);\r\n      // console.log({\r\n      //   settingSchema:\r\n      //     settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name,\r\n      // });\r\n      // const connSchemaStr = CryptoJS.AES.decrypt(\r\n      //   settingSchema?.conn_name?.zworkflows__Connection_Settings_Frontend,\r\n      //   settingSchema?.conn_name?.id\r\n      // ).toString(CryptoJS.enc.Utf8);\r\n      // console.log(JSON.parse(connSchemaStr));\r\n      // const connMap = JSON.parse(connSchemaStr);\r\n      // console.log({ connMap });\r\n      // const accessokenUrl =\r\n      //   \"https://instafunctions-695631012.development.catalystserverless.com/server/v1/auth/tokens/accesstoken\";\r\n\r\n      // const accessTokenMap = await axios.post(\r\n      //   accessokenUrl,\r\n      //   converConncectionMap(connMap)\r\n      // );\r\n      // console.log({ accessTokenMap: accessTokenMap?.data?.data?.token });\r\n      // const userToken = accessTokenMap?.data?.data?.token;\r\n      // setUserAccessToken(accessTokenMap?.data?.data?.token);\r\n      // state.setToken(accessTokenMap?.data?.data?.token);\r\n      // state.setUserToken(userToken);\r\n      // const contactMap = await ZOHO.CRM.API.getRecord({\r\n      //   Entity: entity,\r\n      //   RecordID: entityId,\r\n      // }).then(function (data) {\r\n      //   setRootFolderId(\r\n      //     data?.data?.[0]?.[\r\n      //       settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\r\n      //     ]\r\n      //   );\r\n      //   console.log({\r\n      //     data: data?.data?.[0]?.[\r\n      //       settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\r\n      //     ],\r\n      //   });\r\n      //   console.log({ bread: state.bread });\r\n      // });\r\n    }\r\n  }, [zohoLoaded, entity, entityId]);\r\n\r\n  useEffect(async () => {\r\n    let myXData = [];\r\n    if (decryptData != []) {\r\n      for (let i = 0; i < decryptData.length; i++) {\r\n        const setting1 = decryptData?.[i];\r\n        console.log({ setting1 });\r\n        const encSchema = setting1?.zworkflows__Setting_Schema_Frontend;\r\n        console.log({ encSchema }, entityId);\r\n        const bytes = CryptoJS.AES.decrypt(encSchema, setting1?.id);\r\n        console.log({ bytes });\r\n        var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n        const settingSchema = JSON.parse(originalText);\r\n        console.log({\r\n          settingSchema:\r\n            settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name,\r\n        });\r\n        const connSchemaStr = CryptoJS.AES.decrypt(\r\n          settingSchema?.conn_name?.zworkflows__Connection_Settings_Frontend,\r\n          settingSchema?.conn_name?.id\r\n        ).toString(CryptoJS.enc.Utf8);\r\n        console.log(JSON.parse(connSchemaStr));\r\n        const connMap = JSON.parse(connSchemaStr);\r\n        console.log({ connMap });\r\n        const accessokenUrl =\r\n          \"https://instafunctions-695631012.development.catalystserverless.com/server/v1/auth/tokens/accesstoken\";\r\n\r\n        const accessTokenMap = await axios.post(\r\n          accessokenUrl,\r\n          converConncectionMap(connMap)\r\n        );\r\n        console.log({ accessTokenMap: accessTokenMap?.data?.data?.token });\r\n        const userToken = accessTokenMap?.data?.data?.token;\r\n        setUserAccessToken(accessTokenMap?.data?.data?.token);\r\n        state.setToken(accessTokenMap?.data?.data?.token);\r\n        state.setUserToken(userToken);\r\n        const contactMap = await ZOHO.CRM.API.getRecord({\r\n          Entity: entity,\r\n          RecordID: entityId,\r\n        });\r\n        myXData.push({\r\n          rootFolderId:\r\n            contactMap?.data?.[0]?.[\r\n              settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\r\n            ],\r\n          Name: setting1?.Name,\r\n          userAccessToken: accessTokenMap?.data?.data?.token,\r\n        });\r\n        console.log({\r\n          rootFolderId:\r\n            contactMap?.data?.[0]?.[\r\n              settingSchema?.zoho_workdrive__crm_field_for_folder_id?.api_name\r\n            ],\r\n          Name: setting1?.Name,\r\n          userAccessToken: accessTokenMap?.data?.data?.token,\r\n        });\r\n      }\r\n    }\r\n\r\n    console.log({ myXData });\r\n    setStateSettings(myXData);\r\n  }, [decryptData]);\r\n\r\n  // React.useEffect(() => {\r\n  //   ApiCall.getAccessToken()\r\n  //     .then((res) => {\r\n  //       state.setToken(res.access_token);\r\n  //       state.setLoading(false);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // });\r\n\r\n  const customizer = {\r\n    direction: \"ltr\",\r\n    theme: \"PURPLE_THEME\",\r\n    activeMode: \"light\",\r\n  };\r\n  const theme = BuildTheme(customizer);\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        {/* {JSON.stringify(stateSettings)} */}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          {stateSettings.map((setting, index) => {\r\n            return (\r\n              <Tab label={setting?.Name ?? \"Some\"} {...a11yProps(index)} />\r\n            );\r\n          }) ?? {}}\r\n        </Tabs>\r\n      </Box>\r\n      {stateSettings.map((setting, index) => {\r\n        return (\r\n          <TabPanel value={value} index={index}>\r\n            <div className=\"App\">\r\n              <Response\r\n                rootFolderId={setting.rootFolderId}\r\n                userAccessToken={setting.userAccessToken}\r\n                name\r\n              />\r\n              <Backdrop\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  zIndex: (theme) => theme.zIndex.drawer + 1,\r\n                }}\r\n                open={state.loading}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </div>\r\n          </TabPanel>\r\n        );\r\n      }) ?? {}}\r\n      {/* <TabPanel value={value} index={0}>\r\n        <div className=\"App\">\r\n          <Response\r\n            rootFolderId={rootFolderId}\r\n            userAccessToken={userAccessToken}\r\n          />\r\n          <Backdrop\r\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={state.loading}\r\n          >\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}