{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rayhan\\\\Unique Project\\\\zoho_api_axios(1)\\\\src\\\\components\\\\Playground\\\\Response.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport CommonComponent from \"./CommonComponent\";\nimport useTrackedStore from \"./../../store/useTrackedStore\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTableSearch } from \"./UseTableSearch\";\nimport CustomSeparator from \"./BreadCumb\";\nimport Box from \"@mui/material/Box\";\nimport ModalFileUpload from \"./ModalFileUpload\";\nimport * as ApiCall from \"./api/ApiCalling\";\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\nimport SnackAlert from \"./SnackAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16\n};\n\nfunction Response(props) {\n  _s();\n\n  var _state$settingData17, _state$settingData17$, _state$settingData18, _state$settingData18$, _state$settingData19, _state$settingData19$, _state$settingData20, _state$settingData20$, _state$settingData21, _state$settingData21$;\n\n  const {\n    rootFolderId,\n    userAccessToken,\n    name,\n    settingId\n  } = props;\n  const state = useTrackedStore();\n  const pageRenderCount = useRef(0);\n  const [post, setPost] = React.useState([]);\n  const [searchVal, setSearchVal] = React.useState(\"\");\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  let moveId = useRef(null);\n  useEffect(() => {\n    pageRenderCount.current = pageRenderCount.current + 1;\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const {\n    filteredData,\n    loading\n  } = useTableSearch({\n    searchVal,\n    retrieve: post !== null && post !== void 0 ? post : []\n  });\n  useEffect(async () => {\n    var _state$settingData, _state$settingData$se, _state$settingData$se2;\n\n    setSearchVal(\"\");\n\n    if (!(state !== null && state !== void 0 && (_state$settingData = state.settingData) !== null && _state$settingData !== void 0 && (_state$settingData$se = _state$settingData[settingId]) !== null && _state$settingData$se !== void 0 && (_state$settingData$se2 = _state$settingData$se.previousData) !== null && _state$settingData$se2 !== void 0 && _state$settingData$se2.hasOwnProperty(rootFolderId))) {\n      let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\n\n      try {\n        setPost(res.data);\n        state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, rootFolderId, res.data);\n        state === null || state === void 0 ? void 0 : state.setLoading(false);\n      } catch (error) {\n        console.log({\n          error\n        });\n      }\n    } else {\n      var _state$settingData2, _state$settingData2$s, _state$settingData2$s2, _state$settingData3, _state$settingData3$s, _state$settingData3$s2, _state$settingData4, _state$settingData4$s, _state$settingData4$s2, _state$settingData5, _state$settingData5$s, _state$settingData5$s2;\n\n      let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData2 = state.settingData) === null || _state$settingData2 === void 0 ? void 0 : (_state$settingData2$s = _state$settingData2[settingId]) === null || _state$settingData2$s === void 0 ? void 0 : (_state$settingData2$s2 = _state$settingData2$s.breadCrumbs) === null || _state$settingData2$s2 === void 0 ? void 0 : _state$settingData2$s2.length) - 1;\n      let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData3 = state.settingData) === null || _state$settingData3 === void 0 ? void 0 : (_state$settingData3$s = _state$settingData3[settingId]) === null || _state$settingData3$s === void 0 ? void 0 : (_state$settingData3$s2 = _state$settingData3$s.breadCrumbs) === null || _state$settingData3$s2 === void 0 ? void 0 : _state$settingData3$s2[lastIndex].id;\n      console.log({\n        lastData: state === null || state === void 0 ? void 0 : (_state$settingData4 = state.settingData) === null || _state$settingData4 === void 0 ? void 0 : (_state$settingData4$s = _state$settingData4[settingId]) === null || _state$settingData4$s === void 0 ? void 0 : (_state$settingData4$s2 = _state$settingData4$s.previousData) === null || _state$settingData4$s2 === void 0 ? void 0 : _state$settingData4$s2[lastIndexId]\n      });\n      setPost(state === null || state === void 0 ? void 0 : (_state$settingData5 = state.settingData) === null || _state$settingData5 === void 0 ? void 0 : (_state$settingData5$s = _state$settingData5[settingId]) === null || _state$settingData5$s === void 0 ? void 0 : (_state$settingData5$s2 = _state$settingData5$s.previousData) === null || _state$settingData5$s2 === void 0 ? void 0 : _state$settingData5$s2[lastIndexId]);\n    }\n  }, [userAccessToken, rootFolderId, settingId]);\n\n  function scriptLoaded() {\n    window.A.sort();\n  }\n\n  function handleCloseModal() {\n    setOpen(false);\n  }\n\n  function moveData(e, data) {\n    state === null || state === void 0 ? void 0 : state.setId(data === null || data === void 0 ? void 0 : data.id);\n    moveId.current = data === null || data === void 0 ? void 0 : data.id; // moveId.type = \"move\";\n\n    console.log({\n      moveId\n    });\n  }\n\n  function pasteData(e, data) {\n    var _data$attributes;\n\n    if ((data === null || data === void 0 ? void 0 : (_data$attributes = data.attributes) === null || _data$attributes === void 0 ? void 0 : _data$attributes.type) === \"folder\" && (data === null || data === void 0 ? void 0 : data.id) !== moveId.current) {\n      ApiCall.moveFile(state === null || state === void 0 ? void 0 : state.token, data, moveId.current).then(res => {\n        var _state$settingData6, _state$settingData6$s, _state$settingData6$s2, _state$settingData7, _state$settingData7$s, _state$settingData7$s2;\n\n        let xArray = post.filter(file => file.id != moveId.current);\n        setSnackOpen(true);\n        console.log({\n          xArray\n        });\n        setPost(xArray);\n        let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData6 = state.settingData) === null || _state$settingData6 === void 0 ? void 0 : (_state$settingData6$s = _state$settingData6[settingId]) === null || _state$settingData6$s === void 0 ? void 0 : (_state$settingData6$s2 = _state$settingData6$s.breadCrumbs) === null || _state$settingData6$s2 === void 0 ? void 0 : _state$settingData6$s2.length) - 1;\n        let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData7 = state.settingData) === null || _state$settingData7 === void 0 ? void 0 : (_state$settingData7$s = _state$settingData7[settingId]) === null || _state$settingData7$s === void 0 ? void 0 : (_state$settingData7$s2 = _state$settingData7$s.breadCrumbs) === null || _state$settingData7$s2 === void 0 ? void 0 : _state$settingData7$s2[lastIndex].id;\n        state === null || state === void 0 ? void 0 : state.setAddItemSettingData(settingId, lastIndexId, xArray);\n        console.log(res);\n      }).catch(err => console.log(err));\n      console.log({\n        id: moveId.current\n      });\n    }\n  } // const moveData = (e, data) => {\n  //   console.log(data?.id);\n  //   state?.setPasteChildId(data?.id)\n  // };\n  // const pasteData = (e, data) => {\n  //   console.log({id: state?.pasteChildId});\n  //   // console.log(data?.id);\n  // };\n\n\n  useEffect(() => {\n    console.log({\n      universalData: state === null || state === void 0 ? void 0 : state.settingData\n    });\n  }, [settingId]);\n\n  async function handleClick(file) {\n    var _state$settingData8, _state$settingData8$s, _state$settingData8$s2, _state$settingData9, _state$settingData9$s, _state$settingData10, _state$settingData10$, _state$settingData10$2;\n\n    console.log({\n      file: file === null || file === void 0 ? void 0 : file.id,\n      hit: state === null || state === void 0 ? void 0 : (_state$settingData8 = state.settingData) === null || _state$settingData8 === void 0 ? void 0 : (_state$settingData8$s = _state$settingData8[settingId]) === null || _state$settingData8$s === void 0 ? void 0 : (_state$settingData8$s2 = _state$settingData8$s.previousData) === null || _state$settingData8$s2 === void 0 ? void 0 : _state$settingData8$s2.hasOwnProperty(file === null || file === void 0 ? void 0 : file.id),\n      previous: state === null || state === void 0 ? void 0 : (_state$settingData9 = state.settingData) === null || _state$settingData9 === void 0 ? void 0 : (_state$settingData9$s = _state$settingData9[settingId]) === null || _state$settingData9$s === void 0 ? void 0 : _state$settingData9$s.previousData\n    });\n\n    if (state !== null && state !== void 0 && (_state$settingData10 = state.settingData) !== null && _state$settingData10 !== void 0 && (_state$settingData10$ = _state$settingData10[settingId]) !== null && _state$settingData10$ !== void 0 && (_state$settingData10$2 = _state$settingData10$.previousData) !== null && _state$settingData10$2 !== void 0 && _state$settingData10$2.hasOwnProperty(file === null || file === void 0 ? void 0 : file.id)) {\n      var _state$settingData11, _state$settingData11$, _state$settingData11$2, _state$settingData12, _state$settingData12$, _state$settingData12$2;\n\n      console.log({\n        handleClickIdFound: \"id found handleClick\",\n        file\n      });\n      setSearchVal(\"\");\n      setPost(state === null || state === void 0 ? void 0 : (_state$settingData11 = state.settingData) === null || _state$settingData11 === void 0 ? void 0 : (_state$settingData11$ = _state$settingData11[settingId]) === null || _state$settingData11$ === void 0 ? void 0 : (_state$settingData11$2 = _state$settingData11$.previousData) === null || _state$settingData11$2 === void 0 ? void 0 : _state$settingData11$2[file === null || file === void 0 ? void 0 : file.id]);\n      state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file, state === null || state === void 0 ? void 0 : (_state$settingData12 = state.settingData) === null || _state$settingData12 === void 0 ? void 0 : (_state$settingData12$ = _state$settingData12[settingId]) === null || _state$settingData12$ === void 0 ? void 0 : (_state$settingData12$2 = _state$settingData12$.previousData) === null || _state$settingData12$2 === void 0 ? void 0 : _state$settingData12$2[file === null || file === void 0 ? void 0 : file.id]);\n    } else {\n      try {\n        console.log({\n          handleClickNotFound: \"id not  found handleClick\",\n          file\n        });\n        let res = await ApiCall.getFoldersItem(userAccessToken, file === null || file === void 0 ? void 0 : file.id);\n        await (state === null || state === void 0 ? void 0 : state.setApiSettingData(settingId, file, res.data));\n        setPost(res.data);\n        setSearchVal(\"\");\n      } catch (error) {\n        console.log({\n          error\n        });\n      }\n    }\n  }\n\n  async function setBreadCrumbsUrl(file, data) {\n    var _state$settingData13, _state$settingData13$;\n\n    state === null || state === void 0 ? void 0 : state.setBreadCrumbsSettingData(settingId, file);\n    setPost(data);\n    console.log({\n      breadCrumbs: state === null || state === void 0 ? void 0 : (_state$settingData13 = state.settingData) === null || _state$settingData13 === void 0 ? void 0 : (_state$settingData13$ = _state$settingData13[settingId]) === null || _state$settingData13$ === void 0 ? void 0 : _state$settingData13$.breadCrumbs\n    });\n    setSearchVal(\"\"); // console.log({\n    //   setBread: {\n    //     data,\n    //     file: file?.id,\n    //     hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\n    //       file?.id\n    //     ),\n    //     settingId: settingId,\n    //     previous: state?.settingData,\n    //   },\n    // });\n    // if (\n    //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\n    // ) {\n    //   console.log(\n    //     { setBreadCrumbsUrlFound: \"id found setBreadCrumbsUrl\" },\n    //     file\n    //   );\n    //   state?.setBreadCrumbsSettingData(settingId, file);\n    //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\n    //   console.log({\n    //     breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\n    //   });\n    //   setSearchVal(\"\");\n    // } else {\n    //   console.log({\n    //     setBreadCrumbsUrlNotFount: \"id not Found found setBreadCrumbsUrl\",\n    //     file,\n    //   });\n    //   try {\n    //     const response = await ApiCall.getFoldersItem(\n    //       userAccessToken,\n    //       file?.id\n    //     );\n    //     state?.setApiSettingData(settingId, file?.id, response.data);\n    //     state?.setBreadCrumbsSettingData(settingId, file);\n    //     setPost(response.data);\n    //     setSearchVal(\"\");\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n  }\n\n  const [files, setFiles] = React.useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    noClick: true,\n    noKeyboard: true,\n    // accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      console.log(\"File type detection\", acceptedFiles);\n      setOpen(true);\n      setFiles(acceptedFiles.map((file, index) => {\n        if (file.type.split(\"/\")[1] == \"pdf\") return Object.assign(file, {\n          preview: URL.createObjectURL(file),\n          special: true,\n          specialType: \"pdf\",\n          id: index\n        });else if (file.type.split(\"/\")[0] == \"image\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"image\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"zip\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"zip\",\n            id: index\n          });\n        } else if (file.type.split(\"/\")[1] == \"msword\") {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"msword\",\n            id: index\n          });\n        } else {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            special: false,\n            specialType: \"other\",\n            id: index\n          });\n        }\n      }));\n    }\n  });\n\n  const removeFile = deleteFile => {\n    console.log(deleteFile);\n    setFiles(files.filter(file => file.id != deleteFile.id));\n  };\n\n  const uploadFile = folderId => {\n    var _state$settingData14, _state$settingData14$, _state$settingData14$2, _state$settingData15, _state$settingData15$, _state$settingData15$2;\n\n    // Do something with the files\n    console.log(files);\n    let lastIndex = (state === null || state === void 0 ? void 0 : (_state$settingData14 = state.settingData) === null || _state$settingData14 === void 0 ? void 0 : (_state$settingData14$ = _state$settingData14[settingId]) === null || _state$settingData14$ === void 0 ? void 0 : (_state$settingData14$2 = _state$settingData14$.breadCrumbs) === null || _state$settingData14$2 === void 0 ? void 0 : _state$settingData14$2.length) - 1;\n    let lastIndexId = state === null || state === void 0 ? void 0 : (_state$settingData15 = state.settingData) === null || _state$settingData15 === void 0 ? void 0 : (_state$settingData15$ = _state$settingData15[settingId]) === null || _state$settingData15$ === void 0 ? void 0 : (_state$settingData15$2 = _state$settingData15$.breadCrumbs) === null || _state$settingData15$2 === void 0 ? void 0 : _state$settingData15$2[lastIndex].id;\n    var myCustomArray = post;\n    files.forEach(async (element, index) => {\n      const data = new FormData();\n      data.append(\"file\", element); // console.warn(element);\n\n      console.log({\n        formData: data,\n        element\n      }); // console.log({fileUploading: myUrl});\n\n      try {\n        var _state$settingData16, _state$settingData16$;\n\n        const response = await ApiCall.fileUploader(state === null || state === void 0 ? void 0 : (_state$settingData16 = state.settingData) === null || _state$settingData16 === void 0 ? void 0 : (_state$settingData16$ = _state$settingData16[settingId]) === null || _state$settingData16$ === void 0 ? void 0 : _state$settingData16$.userAccessToken, data, lastIndexId);\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\n        myCustomArray.unshift(myCustomFile);\n        console.log({\n          myCustomArray: myCustomArray\n        });\n        state === null || state === void 0 ? void 0 : state.setAddItemSettingData(settingId, lastIndexId, myCustomArray);\n        setPost(myCustomArray);\n        setSnackOpen(true);\n        console.log({\n          post: post\n        });\n      } catch (error) {\n        console.log({\n          error: error\n        });\n      }\n    });\n    setFiles([]);\n  };\n\n  const thumbs = files.length ? /*#__PURE__*/_jsxDEV(ModalFileUpload, {\n    files: files,\n    removeFile: removeFile,\n    open: open,\n    setOpen: setOpen,\n    handleCloseModal: handleCloseModal,\n    uploadFile: uploadFile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...getRootProps({\n      className: \"dropzone disabled\"\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(CustomSeparator, {\n        settingId: settingId,\n        setBreadCrumbsUrl: setBreadCrumbsUrl,\n        searchVal: searchVal,\n        setSearchVal: setSearchVal,\n        handleClickOpen: handleClickOpen,\n        setPost: setPost,\n        post: post,\n        setSnackOpen: setSnackOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), filteredData.length === 0 && !(state !== null && state !== void 0 && state.loading) && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      fullheight: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fullwidth: true,\n        variant: \"h1\",\n        component: \"div\",\n        children: \"Nothing here!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this), filteredData.length !== 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      sx: {\n        padding: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        spacing: 2,\n        children: [filteredData.filter(file => file.attributes.type === \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 3\n          } // columns={{ xs: 4, sm: 8, md: 12 }}\n          ,\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type == \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [filteredData.filter(file => file.attributes.type !== \"folder\").length !== 0 && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            textAlign: \"left\"\n          },\n          children: \"Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this), !(state !== null && state !== void 0 && (_state$settingData17 = state.settingData) !== null && _state$settingData17 !== void 0 && (_state$settingData17$ = _state$settingData17[settingId]) !== null && _state$settingData17$ !== void 0 && _state$settingData17$.listView) ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: true ? {\n            xs: 2,\n            md: 4\n          } : {},\n          rowSpacing: false ? 0 : 1,\n          columnSpacing: false ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: state !== null && state !== void 0 && (_state$settingData18 = state.settingData) !== null && _state$settingData18 !== void 0 && (_state$settingData18$ = _state$settingData18[settingId]) !== null && _state$settingData18$ !== void 0 && _state$settingData18$.listView ? {\n            xs: 2,\n            md: 3\n          } : {},\n          columns: state !== null && state !== void 0 && (_state$settingData19 = state.settingData) !== null && _state$settingData19 !== void 0 && (_state$settingData19$ = _state$settingData19[settingId]) !== null && _state$settingData19$ !== void 0 && _state$settingData19$.listView ? {\n            xs: 4,\n            sm: 8,\n            md: 12\n          } : {},\n          rowSpacing: state !== null && state !== void 0 && (_state$settingData20 = state.settingData) !== null && _state$settingData20 !== void 0 && (_state$settingData20$ = _state$settingData20[settingId]) !== null && _state$settingData20$ !== void 0 && _state$settingData20$.listView ? 0 : 1,\n          columnSpacing: state !== null && state !== void 0 && (_state$settingData21 = state.settingData) !== null && _state$settingData21 !== void 0 && (_state$settingData21$ = _state$settingData21[settingId]) !== null && _state$settingData21$ !== void 0 && _state$settingData21$.listView ? {} : {\n            xs: 1,\n            sm: 2,\n            md: 3\n          },\n          children: filteredData === null || filteredData === void 0 ? void 0 : filteredData.map((file, index) => {\n            if (file.attributes.type !== \"folder\") return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(CommonComponent, {\n                settingId: settingId,\n                file: file,\n                handleClick: () => handleClick(file),\n                setPost: setPost,\n                post: post,\n                setSnackOpen: setSnackOpen,\n                moveData: moveData,\n                pasteData: pasteData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SnackAlert, {\n      snackOpen: snackOpen,\n      handleCloseSnack: handleCloseSnack,\n      severity: \"success\",\n      message: \"This is a success message!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Response, \"x0sms5ugVtZg6nuPSe0faRxwJcc=\", false, function () {\n  return [useTrackedStore, useTableSearch, useDropzone];\n});\n\n_c = Response;\nexport default Response;\n\nvar _c;\n\n$RefreshReg$(_c, \"Response\");","map":{"version":3,"sources":["D:/Rayhan/Unique Project/zoho_api_axios(1)/src/components/Playground/Response.js"],"names":["React","useEffect","useState","useCallback","useRef","useDropzone","CommonComponent","useTrackedStore","Typography","Grid","useTableSearch","CustomSeparator","Box","ModalFileUpload","ApiCall","FileUploadResponse","SnackAlert","thumbsContainer","display","flexDirection","flexWrap","marginTop","Response","props","rootFolderId","userAccessToken","name","settingId","state","pageRenderCount","post","setPost","searchVal","setSearchVal","snackOpen","setSnackOpen","open","setOpen","moveId","current","handleClickOpen","filteredData","loading","retrieve","settingData","previousData","hasOwnProperty","res","getFoldersItem","data","setApiSettingData","setLoading","error","console","log","lastIndex","breadCrumbs","length","lastIndexId","id","lastData","scriptLoaded","window","A","sort","handleCloseModal","moveData","e","setId","pasteData","attributes","type","moveFile","token","then","xArray","filter","file","setAddItemSettingData","catch","err","universalData","handleClick","hit","previous","handleClickIdFound","handleClickNotFound","setBreadCrumbsUrl","setBreadCrumbsSettingData","files","setFiles","getRootProps","getInputProps","noClick","noKeyboard","onDrop","acceptedFiles","map","index","split","Object","assign","preview","URL","createObjectURL","special","specialType","removeFile","deleteFile","uploadFile","folderId","myCustomArray","forEach","element","FormData","append","formData","response","fileUploader","myCustomFile","makeCustomFile","unshift","thumbs","revokeObjectURL","handleCloseSnack","event","reason","className","xs","md","padding","textAlign","listView","sm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport CommonComponent from \"./CommonComponent\";\r\nimport useTrackedStore from \"./../../store/useTrackedStore\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useTableSearch } from \"./UseTableSearch\";\r\nimport CustomSeparator from \"./BreadCumb\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport ModalFileUpload from \"./ModalFileUpload\";\r\nimport * as ApiCall from \"./api/ApiCalling\";\r\nimport * as FileUploadResponse from \"./api/FileUploadResponse\";\r\nimport SnackAlert from \"./SnackAlert\";\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n};\r\n\r\nfunction Response(props) {\r\n  const { rootFolderId, userAccessToken, name, settingId } = props;\r\n  const state = useTrackedStore();\r\n  const pageRenderCount = useRef(0);\r\n  const [post, setPost] = React.useState([]);\r\n  const [searchVal, setSearchVal] = React.useState(\"\");\r\n  const [snackOpen, setSnackOpen] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  let moveId = useRef(null);\r\n\r\n  useEffect(() => {\r\n    pageRenderCount.current = pageRenderCount.current + 1;\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const { filteredData, loading } = useTableSearch({\r\n    searchVal,\r\n    retrieve: post ?? [],\r\n  });\r\n\r\n  useEffect(async () => {\r\n    setSearchVal(\"\");\r\n    if (\r\n      !state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n        rootFolderId\r\n      )\r\n    ) {\r\n      let res = await ApiCall.getFoldersItem(userAccessToken, rootFolderId);\r\n      try {\r\n        setPost(res.data);\r\n        state?.setApiSettingData(settingId, rootFolderId, res.data);\r\n        state?.setLoading(false);\r\n      } catch (error) {\r\n        console.log({ error });\r\n      }\r\n    } else {\r\n      let lastIndex = state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n      let lastIndexId =\r\n        state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n      console.log({\r\n        lastData: state?.settingData?.[settingId]?.previousData?.[lastIndexId],\r\n      });\r\n      setPost(state?.settingData?.[settingId]?.previousData?.[lastIndexId]);\r\n    }\r\n  }, [userAccessToken, rootFolderId, settingId]);\r\n\r\n  function scriptLoaded() {\r\n    window.A.sort();\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function moveData(e, data) {\r\n    state?.setId(data?.id);\r\n    moveId.current = data?.id;\r\n    // moveId.type = \"move\";\r\n    console.log({ moveId });\r\n  }\r\n\r\n  function pasteData(e, data) {\r\n    if (data?.attributes?.type === \"folder\" && data?.id !== moveId.current) {\r\n      ApiCall.moveFile(state?.token, data, moveId.current)\r\n        .then((res) => {\r\n          let xArray = post.filter((file) => file.id != moveId.current);\r\n          setSnackOpen(true);\r\n          console.log({ xArray });\r\n          setPost(xArray);\r\n\r\n          let lastIndex =\r\n            state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n          let lastIndexId =\r\n            state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n\r\n          state?.setAddItemSettingData(settingId, lastIndexId, xArray);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log({ id: moveId.current });\r\n    }\r\n  }\r\n\r\n  // const moveData = (e, data) => {\r\n  //   console.log(data?.id);\r\n  //   state?.setPasteChildId(data?.id)\r\n  // };\r\n\r\n  // const pasteData = (e, data) => {\r\n  //   console.log({id: state?.pasteChildId});\r\n  //   // console.log(data?.id);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log({ universalData: state?.settingData });\r\n  }, [settingId]);\r\n\r\n  async function handleClick(file) {\r\n    console.log({\r\n      file: file?.id,\r\n      hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n        file?.id\r\n      ),\r\n      previous: state?.settingData?.[settingId]?.previousData,\r\n    });\r\n    if (\r\n      state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\r\n    ) {\r\n      console.log({ handleClickIdFound: \"id found handleClick\", file });\r\n      setSearchVal(\"\");\r\n      setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\r\n      state?.setApiSettingData(\r\n        settingId,\r\n        file,\r\n        state?.settingData?.[settingId]?.previousData?.[file?.id]\r\n      );\r\n    } else {\r\n      try {\r\n        console.log({ handleClickNotFound: \"id not  found handleClick\", file });\r\n        let res = await ApiCall.getFoldersItem(userAccessToken, file?.id);\r\n\r\n        await state?.setApiSettingData(settingId, file, res.data);\r\n        setPost(res.data);\r\n        setSearchVal(\"\");\r\n      } catch (error) {\r\n        console.log({ error });\r\n      }\r\n    }\r\n  }\r\n\r\n  async function setBreadCrumbsUrl(file, data) {\r\n    state?.setBreadCrumbsSettingData(settingId, file);\r\n    setPost(data);\r\n    console.log({\r\n      breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\r\n    });\r\n    setSearchVal(\"\");\r\n    // console.log({\r\n    //   setBread: {\r\n    //     data,\r\n    //     file: file?.id,\r\n    //     hit: state?.settingData?.[settingId]?.previousData?.hasOwnProperty(\r\n    //       file?.id\r\n    //     ),\r\n    //     settingId: settingId,\r\n    //     previous: state?.settingData,\r\n    //   },\r\n    // });\r\n    // if (\r\n    //   state?.settingData?.[settingId]?.previousData?.hasOwnProperty(file?.id)\r\n    // ) {\r\n    //   console.log(\r\n    //     { setBreadCrumbsUrlFound: \"id found setBreadCrumbsUrl\" },\r\n    //     file\r\n    //   );\r\n    //   state?.setBreadCrumbsSettingData(settingId, file);\r\n    //   setPost(state?.settingData?.[settingId]?.previousData?.[file?.id]);\r\n    //   console.log({\r\n    //     breadCrumbs: state?.settingData?.[settingId]?.breadCrumbs,\r\n    //   });\r\n    //   setSearchVal(\"\");\r\n    // } else {\r\n    //   console.log({\r\n    //     setBreadCrumbsUrlNotFount: \"id not Found found setBreadCrumbsUrl\",\r\n    //     file,\r\n    //   });\r\n    //   try {\r\n    //     const response = await ApiCall.getFoldersItem(\r\n    //       userAccessToken,\r\n    //       file?.id\r\n    //     );\r\n\r\n    //     state?.setApiSettingData(settingId, file?.id, response.data);\r\n    //     state?.setBreadCrumbsSettingData(settingId, file);\r\n    //     setPost(response.data);\r\n    //     setSearchVal(\"\");\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const [files, setFiles] = React.useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    // accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      console.log(\"File type detection\", acceptedFiles);\r\n      setOpen(true);\r\n      setFiles(\r\n        acceptedFiles.map((file, index) => {\r\n          if (file.type.split(\"/\")[1] == \"pdf\")\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: true,\r\n              specialType: \"pdf\",\r\n              id: index,\r\n            });\r\n          else if (file.type.split(\"/\")[0] == \"image\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"image\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"zip\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"zip\",\r\n              id: index,\r\n            });\r\n          } else if (file.type.split(\"/\")[1] == \"msword\") {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"msword\",\r\n              id: index,\r\n            });\r\n          } else {\r\n            return Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n              special: false,\r\n              specialType: \"other\",\r\n              id: index,\r\n            });\r\n          }\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  const removeFile = (deleteFile) => {\r\n    console.log(deleteFile);\r\n    setFiles(files.filter((file) => file.id != deleteFile.id));\r\n  };\r\n\r\n  const uploadFile = (folderId) => {\r\n    // Do something with the files\r\n    console.log(files);\r\n    let lastIndex = state?.settingData?.[settingId]?.breadCrumbs?.length - 1;\r\n    let lastIndexId =\r\n      state?.settingData?.[settingId]?.breadCrumbs?.[lastIndex].id;\r\n    var myCustomArray = post;\r\n    files.forEach(async (element, index) => {\r\n      const data = new FormData();\r\n      data.append(\"file\", element);\r\n      // console.warn(element);\r\n      console.log({\r\n        formData: data,\r\n        element,\r\n      });\r\n      // console.log({fileUploading: myUrl});\r\n      try {\r\n        const response = await ApiCall.fileUploader(\r\n          state?.settingData?.[settingId]?.userAccessToken,\r\n          data,\r\n          lastIndexId\r\n        );\r\n\r\n        let myCustomFile = FileUploadResponse.makeCustomFile(response);\r\n        myCustomArray.unshift(myCustomFile);\r\n        console.log({ myCustomArray: myCustomArray });\r\n        state?.setAddItemSettingData(settingId, lastIndexId, myCustomArray);\r\n        setPost(myCustomArray);\r\n        setSnackOpen(true);\r\n        console.log({ post: post });\r\n      } catch (error) {\r\n        console.log({ error: error });\r\n      }\r\n    });\r\n    setFiles([]);\r\n  };\r\n\r\n  const thumbs = files.length ? (\r\n    <ModalFileUpload\r\n      files={files}\r\n      removeFile={removeFile}\r\n      open={open}\r\n      setOpen={setOpen}\r\n      handleCloseModal={handleCloseModal}\r\n      uploadFile={uploadFile}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      {...getRootProps({ className: \"dropzone disabled\" })}\r\n    >\r\n      <Grid item container>\r\n        <CustomSeparator\r\n          settingId={settingId}\r\n          setBreadCrumbsUrl={setBreadCrumbsUrl}\r\n          searchVal={searchVal}\r\n          setSearchVal={setSearchVal}\r\n          handleClickOpen={handleClickOpen}\r\n          setPost={setPost}\r\n          post={post}\r\n          setSnackOpen={setSnackOpen}\r\n        />\r\n      </Grid>\r\n      <input {...getInputProps()} />\r\n      <div style={thumbsContainer}>{thumbs}</div>\r\n\r\n      {filteredData.length === 0 && !state?.loading && (\r\n        <Grid item fullheight justifyContent=\"center\">\r\n          <Typography fullwidth variant=\"h1\" component=\"div\">\r\n            Nothing here!!!\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {/* <div>{JSON.stringify(post??[])}</div> */}\r\n      {filteredData.length !== 0 && (\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          spacing={{ xs: 2, md: 3 }}\r\n          sx={{ padding: 5 }}\r\n        >\r\n          <Grid item xs={12} spacing={2}>\r\n            {filteredData.filter((file) => file.attributes.type === \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Folder\r\n              </Typography>\r\n            )}\r\n\r\n            <Grid\r\n              container\r\n              spacing={{ xs: 2, md: 3 }}\r\n              // columns={{ xs: 4, sm: 8, md: 12 }}\r\n            >\r\n              {filteredData?.map((file, index) => {\r\n                if (file.attributes.type == \"folder\")\r\n                  return (\r\n                    <Grid item xs={12} sm={4} md={3}>\r\n                      <CommonComponent\r\n                        settingId={settingId}\r\n                        file={file}\r\n                        handleClick={() => handleClick(file)}\r\n                        setPost={setPost}\r\n                        post={post}\r\n                        setSnackOpen={setSnackOpen}\r\n                        moveData={moveData}\r\n                        pasteData={pasteData}\r\n                      />\r\n                    </Grid>\r\n                  );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {filteredData.filter((file) => file.attributes.type !== \"folder\")\r\n              .length !== 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"div\"\r\n                gutterBottom\r\n                sx={{ textAlign: \"left\" }}\r\n              >\r\n                Files\r\n              </Typography>\r\n            )}\r\n\r\n            {!state?.settingData?.[settingId]?.listView ? (\r\n              <Grid\r\n                container\r\n                spacing={true ? { xs: 2, md: 4 } : {}}\r\n                rowSpacing={false ? 0 : 1}\r\n                columnSpacing={false ? {} : { xs: 1, sm: 2, md: 3 }}\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} sm={6} md={4}>\r\n                        <CommonComponent\r\n                          settingId={settingId}\r\n                          file={file}\r\n                          handleClick={() => handleClick(file)}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveData={moveData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            ) : (\r\n              <Grid\r\n                container\r\n                spacing={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? { xs: 2, md: 3 }\r\n                    : {}\r\n                }\r\n                columns={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? { xs: 4, sm: 8, md: 12 }\r\n                    : {}\r\n                }\r\n                rowSpacing={state?.settingData?.[settingId]?.listView ? 0 : 1}\r\n                columnSpacing={\r\n                  state?.settingData?.[settingId]?.listView\r\n                    ? {}\r\n                    : { xs: 1, sm: 2, md: 3 }\r\n                }\r\n              >\r\n                {filteredData?.map((file, index) => {\r\n                  if (file.attributes.type !== \"folder\")\r\n                    return (\r\n                      <Grid item xs={12} md={3}>\r\n                        <CommonComponent\r\n                          settingId={settingId}\r\n                          file={file}\r\n                          handleClick={() => handleClick(file)}\r\n                          setPost={setPost}\r\n                          post={post}\r\n                          setSnackOpen={setSnackOpen}\r\n                          moveData={moveData}\r\n                          pasteData={pasteData}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <SnackAlert\r\n        snackOpen={snackOpen}\r\n        handleCloseSnack={handleCloseSnack}\r\n        severity={\"success\"}\r\n        message={\"This is a success message!\"}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Response;\r\n"]},"metadata":{},"sourceType":"module"}